// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kernel0_B_IO_L2_in_intra_trans_Pipeline_VITIS_LOOP_407_1_V (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fifo_B_PE_0_185_din,
        fifo_B_PE_0_185_full_n,
        fifo_B_PE_0_185_write,
        local_B_address0,
        local_B_ce0,
        local_B_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [63:0] fifo_B_PE_0_185_din;
input   fifo_B_PE_0_185_full_n;
output   fifo_B_PE_0_185_write;
output  [2:0] local_B_address0;
output   local_B_ce0;
input  [511:0] local_B_q0;

reg ap_idle;
reg fifo_B_PE_0_185_write;
reg[2:0] local_B_address0;
reg local_B_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] icmp_ln1069_reg_783;
reg   [0:0] icmp_ln1069_reg_783_pp0_iter1_reg;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1069_fu_182_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    fifo_B_PE_0_185_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln1069_15_fu_200_p2;
reg   [0:0] icmp_ln1069_15_reg_787;
reg   [0:0] icmp_ln1069_15_reg_787_pp0_iter1_reg;
wire   [0:0] icmp_ln106929_fu_212_p2;
reg   [0:0] icmp_ln106929_reg_802;
wire   [0:0] and_ln407_fu_218_p2;
reg   [0:0] and_ln407_reg_806;
reg   [0:0] and_ln407_reg_806_pp0_iter1_reg;
wire   [2:0] trunc_ln407_fu_350_p1;
reg   [2:0] trunc_ln407_reg_824;
wire   [63:0] p_cast_fu_301_p1;
wire   [63:0] conv_i46_mid1_fu_327_p1;
wire   [63:0] p_cast1_fu_370_p1;
reg   [3:0] c7_V_fu_98;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_c7_V_load;
wire   [3:0] select_ln870_fu_236_p3;
reg   [3:0] c6_V_fu_102;
wire   [3:0] select_ln1069_21_fu_375_p3;
reg   [7:0] indvar_flatten_fu_106;
reg   [7:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [7:0] select_ln1069_22_fu_250_p3;
reg   [3:0] c5_V_fu_110;
wire   [3:0] select_ln407_2_fu_343_p3;
reg   [9:0] indvar_flatten34_fu_114;
reg   [9:0] ap_sig_allocacmp_indvar_flatten34_load;
wire   [9:0] add_ln1069_6_fu_188_p2;
wire   [63:0] p_0_fu_726_p10;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] xor_ln407_fu_206_p2;
wire   [0:0] or_ln870_fu_230_p2;
wire   [3:0] add_ln870_10_fu_224_p2;
wire   [7:0] add_ln1069_fu_244_p2;
wire   [0:0] tmp_fu_279_p3;
wire   [2:0] empty_fu_291_p1;
wire   [2:0] zext_ln1069_fu_287_p1;
wire   [2:0] empty_148_fu_295_p2;
wire   [3:0] add_ln870_fu_306_p2;
wire   [0:0] tmp_7_fu_319_p3;
wire   [0:0] select_ln407_1_fu_332_p3;
wire   [3:0] select_ln407_fu_312_p3;
wire   [3:0] add_ln870_9_fu_354_p2;
wire   [2:0] empty_150_fu_360_p1;
wire   [2:0] zext_ln407_fu_339_p1;
wire   [2:0] empty_151_fu_364_p2;
wire   [63:0] data_split_V_1_mid_fu_462_p4;
wire   [63:0] data_split_V_1_fu_392_p4;
wire   [63:0] data_split_V_2_mid_fu_479_p4;
wire   [63:0] data_split_V_2_fu_402_p4;
wire   [63:0] data_split_V_3_mid_fu_496_p4;
wire   [63:0] data_split_V_3_fu_412_p4;
wire   [63:0] data_split_V_4_mid_fu_513_p4;
wire   [63:0] data_split_V_4_fu_422_p4;
wire   [63:0] data_split_V_5_mid_fu_530_p4;
wire   [63:0] data_split_V_5_fu_432_p4;
wire   [63:0] data_split_V_6_mid_fu_547_p4;
wire   [63:0] data_split_V_6_fu_442_p4;
wire   [63:0] data_split_V_7_mid_fu_564_p4;
wire   [63:0] data_split_V_7_fu_452_p4;
wire   [63:0] trunc_ln1069_1_fu_585_p1;
wire   [63:0] trunc_ln1069_2_fu_589_p1;
wire   [63:0] trunc_ln1069_fu_581_p1;
wire   [63:0] select_ln407_10_fu_593_p3;
wire   [63:0] data_split_V_1_mid1_fu_607_p4;
wire   [63:0] select_ln407_3_fu_472_p3;
wire   [63:0] data_split_V_2_mid1_fu_624_p4;
wire   [63:0] select_ln407_4_fu_489_p3;
wire   [63:0] data_split_V_3_mid1_fu_641_p4;
wire   [63:0] select_ln407_5_fu_506_p3;
wire   [63:0] data_split_V_4_mid1_fu_658_p4;
wire   [63:0] select_ln407_6_fu_523_p3;
wire   [63:0] data_split_V_5_mid1_fu_675_p4;
wire   [63:0] select_ln407_7_fu_540_p3;
wire   [63:0] data_split_V_6_mid1_fu_692_p4;
wire   [63:0] select_ln407_8_fu_557_p3;
wire   [63:0] data_split_V_7_mid1_fu_709_p4;
wire   [63:0] select_ln407_9_fu_574_p3;
wire   [63:0] p_0_fu_726_p1;
wire   [63:0] p_0_fu_726_p2;
wire   [63:0] p_0_fu_726_p3;
wire   [63:0] p_0_fu_726_p4;
wire   [63:0] p_0_fu_726_p5;
wire   [63:0] p_0_fu_726_p6;
wire   [63:0] p_0_fu_726_p7;
wire   [63:0] p_0_fu_726_p8;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_165;
reg    ap_condition_105;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

kernel0_mux_83_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 64 ))
mux_83_64_1_1_U47(
    .din0(p_0_fu_726_p1),
    .din1(p_0_fu_726_p2),
    .din2(p_0_fu_726_p3),
    .din3(p_0_fu_726_p4),
    .din4(p_0_fu_726_p5),
    .din5(p_0_fu_726_p6),
    .din6(p_0_fu_726_p7),
    .din7(p_0_fu_726_p8),
    .din8(trunc_ln407_reg_824),
    .dout(p_0_fu_726_p10)
);

kernel0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            c5_V_fu_110 <= 4'd0;
        end else if (((icmp_ln1069_reg_783 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            c5_V_fu_110 <= select_ln407_2_fu_343_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            c6_V_fu_102 <= 4'd0;
        end else if (((icmp_ln1069_reg_783 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            c6_V_fu_102 <= select_ln1069_21_fu_375_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1069_fu_182_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            c7_V_fu_98 <= select_ln870_fu_236_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            c7_V_fu_98 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1069_fu_182_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten34_fu_114 <= add_ln1069_6_fu_188_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten34_fu_114 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1069_fu_182_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_106 <= select_ln1069_22_fu_250_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_106 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1069_fu_182_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln407_reg_806 <= and_ln407_fu_218_p2;
        icmp_ln106929_reg_802 <= icmp_ln106929_fu_212_p2;
        icmp_ln1069_15_reg_787 <= icmp_ln1069_15_fu_200_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln407_reg_806_pp0_iter1_reg <= and_ln407_reg_806;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln1069_15_reg_787_pp0_iter1_reg <= icmp_ln1069_15_reg_787;
        icmp_ln1069_reg_783 <= icmp_ln1069_fu_182_p2;
        icmp_ln1069_reg_783_pp0_iter1_reg <= icmp_ln1069_reg_783;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1069_reg_783 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln407_reg_824 <= trunc_ln407_fu_350_p1;
    end
end

always @ (*) begin
    if (((icmp_ln1069_fu_182_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_c7_V_load = 4'd0;
    end else begin
        ap_sig_allocacmp_c7_V_load = c7_V_fu_98;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten34_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten34_load = indvar_flatten34_fu_114;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_106;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1069_reg_783_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        fifo_B_PE_0_185_blk_n = fifo_B_PE_0_185_full_n;
    end else begin
        fifo_B_PE_0_185_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1069_reg_783_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        fifo_B_PE_0_185_write = 1'b1;
    end else begin
        fifo_B_PE_0_185_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_105)) begin
        if ((1'b1 == ap_condition_165)) begin
            local_B_address0 = p_cast1_fu_370_p1;
        end else if (((icmp_ln1069_15_reg_787 == 1'd1) & (icmp_ln1069_reg_783 == 1'd0))) begin
            local_B_address0 = conv_i46_mid1_fu_327_p1;
        end else if (((icmp_ln106929_reg_802 == 1'd0) & (icmp_ln1069_15_reg_787 == 1'd0))) begin
            local_B_address0 = p_cast_fu_301_p1;
        end else begin
            local_B_address0 = 'bx;
        end
    end else begin
        local_B_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln106929_reg_802 == 1'd1) & (icmp_ln1069_15_reg_787 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1069_reg_783 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln1069_15_reg_787 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1069_reg_783 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln106929_reg_802 == 1'd0) & (icmp_ln1069_15_reg_787 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        local_B_ce0 = 1'b1;
    end else begin
        local_B_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1069_6_fu_188_p2 = (ap_sig_allocacmp_indvar_flatten34_load + 10'd1);

assign add_ln1069_fu_244_p2 = (ap_sig_allocacmp_indvar_flatten_load + 8'd1);

assign add_ln870_10_fu_224_p2 = (ap_sig_allocacmp_c7_V_load + 4'd1);

assign add_ln870_9_fu_354_p2 = (select_ln407_fu_312_p3 + 4'd1);

assign add_ln870_fu_306_p2 = (c5_V_fu_110 + 4'd1);

assign and_ln407_fu_218_p2 = (xor_ln407_fu_206_p2 & icmp_ln106929_fu_212_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((icmp_ln1069_reg_783_pp0_iter1_reg == 1'd0) & (fifo_B_PE_0_185_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln1069_reg_783_pp0_iter1_reg == 1'd0) & (fifo_B_PE_0_185_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln1069_reg_783_pp0_iter1_reg == 1'd0) & (fifo_B_PE_0_185_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((icmp_ln1069_reg_783_pp0_iter1_reg == 1'd0) & (fifo_B_PE_0_185_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_105 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_165 = ((icmp_ln106929_reg_802 == 1'd1) & (icmp_ln1069_15_reg_787 == 1'd0) & (icmp_ln1069_reg_783 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign conv_i46_mid1_fu_327_p1 = tmp_7_fu_319_p3;

assign data_split_V_1_fu_392_p4 = {{local_B_q0[127:64]}};

assign data_split_V_1_mid1_fu_607_p4 = {{local_B_q0[127:64]}};

assign data_split_V_1_mid_fu_462_p4 = {{local_B_q0[127:64]}};

assign data_split_V_2_fu_402_p4 = {{local_B_q0[191:128]}};

assign data_split_V_2_mid1_fu_624_p4 = {{local_B_q0[191:128]}};

assign data_split_V_2_mid_fu_479_p4 = {{local_B_q0[191:128]}};

assign data_split_V_3_fu_412_p4 = {{local_B_q0[255:192]}};

assign data_split_V_3_mid1_fu_641_p4 = {{local_B_q0[255:192]}};

assign data_split_V_3_mid_fu_496_p4 = {{local_B_q0[255:192]}};

assign data_split_V_4_fu_422_p4 = {{local_B_q0[319:256]}};

assign data_split_V_4_mid1_fu_658_p4 = {{local_B_q0[319:256]}};

assign data_split_V_4_mid_fu_513_p4 = {{local_B_q0[319:256]}};

assign data_split_V_5_fu_432_p4 = {{local_B_q0[383:320]}};

assign data_split_V_5_mid1_fu_675_p4 = {{local_B_q0[383:320]}};

assign data_split_V_5_mid_fu_530_p4 = {{local_B_q0[383:320]}};

assign data_split_V_6_fu_442_p4 = {{local_B_q0[447:384]}};

assign data_split_V_6_mid1_fu_692_p4 = {{local_B_q0[447:384]}};

assign data_split_V_6_mid_fu_547_p4 = {{local_B_q0[447:384]}};

assign data_split_V_7_fu_452_p4 = {{local_B_q0[511:448]}};

assign data_split_V_7_mid1_fu_709_p4 = {{local_B_q0[511:448]}};

assign data_split_V_7_mid_fu_564_p4 = {{local_B_q0[511:448]}};

assign empty_148_fu_295_p2 = (empty_fu_291_p1 + zext_ln1069_fu_287_p1);

assign empty_150_fu_360_p1 = add_ln870_9_fu_354_p2[2:0];

assign empty_151_fu_364_p2 = (empty_150_fu_360_p1 + zext_ln407_fu_339_p1);

assign empty_fu_291_p1 = c6_V_fu_102[2:0];

assign fifo_B_PE_0_185_din = p_0_fu_726_p10;

assign icmp_ln106929_fu_212_p2 = ((ap_sig_allocacmp_c7_V_load == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln1069_15_fu_200_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 8'd64) ? 1'b1 : 1'b0);

assign icmp_ln1069_fu_182_p2 = ((ap_sig_allocacmp_indvar_flatten34_load == 10'd512) ? 1'b1 : 1'b0);

assign or_ln870_fu_230_p2 = (icmp_ln1069_15_fu_200_p2 | and_ln407_fu_218_p2);

assign p_0_fu_726_p1 = ((and_ln407_reg_806_pp0_iter1_reg[0:0] == 1'b1) ? trunc_ln1069_fu_581_p1 : select_ln407_10_fu_593_p3);

assign p_0_fu_726_p2 = ((and_ln407_reg_806_pp0_iter1_reg[0:0] == 1'b1) ? data_split_V_1_mid1_fu_607_p4 : select_ln407_3_fu_472_p3);

assign p_0_fu_726_p3 = ((and_ln407_reg_806_pp0_iter1_reg[0:0] == 1'b1) ? data_split_V_2_mid1_fu_624_p4 : select_ln407_4_fu_489_p3);

assign p_0_fu_726_p4 = ((and_ln407_reg_806_pp0_iter1_reg[0:0] == 1'b1) ? data_split_V_3_mid1_fu_641_p4 : select_ln407_5_fu_506_p3);

assign p_0_fu_726_p5 = ((and_ln407_reg_806_pp0_iter1_reg[0:0] == 1'b1) ? data_split_V_4_mid1_fu_658_p4 : select_ln407_6_fu_523_p3);

assign p_0_fu_726_p6 = ((and_ln407_reg_806_pp0_iter1_reg[0:0] == 1'b1) ? data_split_V_5_mid1_fu_675_p4 : select_ln407_7_fu_540_p3);

assign p_0_fu_726_p7 = ((and_ln407_reg_806_pp0_iter1_reg[0:0] == 1'b1) ? data_split_V_6_mid1_fu_692_p4 : select_ln407_8_fu_557_p3);

assign p_0_fu_726_p8 = ((and_ln407_reg_806_pp0_iter1_reg[0:0] == 1'b1) ? data_split_V_7_mid1_fu_709_p4 : select_ln407_9_fu_574_p3);

assign p_cast1_fu_370_p1 = empty_151_fu_364_p2;

assign p_cast_fu_301_p1 = empty_148_fu_295_p2;

assign select_ln1069_21_fu_375_p3 = ((and_ln407_reg_806[0:0] == 1'b1) ? add_ln870_9_fu_354_p2 : select_ln407_fu_312_p3);

assign select_ln1069_22_fu_250_p3 = ((icmp_ln1069_15_fu_200_p2[0:0] == 1'b1) ? 8'd1 : add_ln1069_fu_244_p2);

assign select_ln407_10_fu_593_p3 = ((icmp_ln1069_15_reg_787_pp0_iter1_reg[0:0] == 1'b1) ? trunc_ln1069_1_fu_585_p1 : trunc_ln1069_2_fu_589_p1);

assign select_ln407_1_fu_332_p3 = ((icmp_ln1069_15_reg_787[0:0] == 1'b1) ? tmp_7_fu_319_p3 : tmp_fu_279_p3);

assign select_ln407_2_fu_343_p3 = ((icmp_ln1069_15_reg_787[0:0] == 1'b1) ? add_ln870_fu_306_p2 : c5_V_fu_110);

assign select_ln407_3_fu_472_p3 = ((icmp_ln1069_15_reg_787_pp0_iter1_reg[0:0] == 1'b1) ? data_split_V_1_mid_fu_462_p4 : data_split_V_1_fu_392_p4);

assign select_ln407_4_fu_489_p3 = ((icmp_ln1069_15_reg_787_pp0_iter1_reg[0:0] == 1'b1) ? data_split_V_2_mid_fu_479_p4 : data_split_V_2_fu_402_p4);

assign select_ln407_5_fu_506_p3 = ((icmp_ln1069_15_reg_787_pp0_iter1_reg[0:0] == 1'b1) ? data_split_V_3_mid_fu_496_p4 : data_split_V_3_fu_412_p4);

assign select_ln407_6_fu_523_p3 = ((icmp_ln1069_15_reg_787_pp0_iter1_reg[0:0] == 1'b1) ? data_split_V_4_mid_fu_513_p4 : data_split_V_4_fu_422_p4);

assign select_ln407_7_fu_540_p3 = ((icmp_ln1069_15_reg_787_pp0_iter1_reg[0:0] == 1'b1) ? data_split_V_5_mid_fu_530_p4 : data_split_V_5_fu_432_p4);

assign select_ln407_8_fu_557_p3 = ((icmp_ln1069_15_reg_787_pp0_iter1_reg[0:0] == 1'b1) ? data_split_V_6_mid_fu_547_p4 : data_split_V_6_fu_442_p4);

assign select_ln407_9_fu_574_p3 = ((icmp_ln1069_15_reg_787_pp0_iter1_reg[0:0] == 1'b1) ? data_split_V_7_mid_fu_564_p4 : data_split_V_7_fu_452_p4);

assign select_ln407_fu_312_p3 = ((icmp_ln1069_15_reg_787[0:0] == 1'b1) ? 4'd0 : c6_V_fu_102);

assign select_ln870_fu_236_p3 = ((or_ln870_fu_230_p2[0:0] == 1'b1) ? 4'd1 : add_ln870_10_fu_224_p2);

assign tmp_7_fu_319_p3 = add_ln870_fu_306_p2[32'd3];

assign tmp_fu_279_p3 = c5_V_fu_110[32'd3];

assign trunc_ln1069_1_fu_585_p1 = local_B_q0[63:0];

assign trunc_ln1069_2_fu_589_p1 = local_B_q0[63:0];

assign trunc_ln1069_fu_581_p1 = local_B_q0[63:0];

assign trunc_ln407_fu_350_p1 = select_ln407_2_fu_343_p3[2:0];

assign xor_ln407_fu_206_p2 = (icmp_ln1069_15_fu_200_p2 ^ 1'd1);

assign zext_ln1069_fu_287_p1 = tmp_fu_279_p3;

assign zext_ln407_fu_339_p1 = select_ln407_1_fu_332_p3;

endmodule //kernel0_B_IO_L2_in_intra_trans_Pipeline_VITIS_LOOP_407_1_V
