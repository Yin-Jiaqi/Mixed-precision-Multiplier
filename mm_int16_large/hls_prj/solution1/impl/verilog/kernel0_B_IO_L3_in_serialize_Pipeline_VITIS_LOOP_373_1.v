// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kernel0_B_IO_L3_in_serialize_Pipeline_VITIS_LOOP_373_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_B_AWVALID,
        m_axi_gmem_B_AWREADY,
        m_axi_gmem_B_AWADDR,
        m_axi_gmem_B_AWID,
        m_axi_gmem_B_AWLEN,
        m_axi_gmem_B_AWSIZE,
        m_axi_gmem_B_AWBURST,
        m_axi_gmem_B_AWLOCK,
        m_axi_gmem_B_AWCACHE,
        m_axi_gmem_B_AWPROT,
        m_axi_gmem_B_AWQOS,
        m_axi_gmem_B_AWREGION,
        m_axi_gmem_B_AWUSER,
        m_axi_gmem_B_WVALID,
        m_axi_gmem_B_WREADY,
        m_axi_gmem_B_WDATA,
        m_axi_gmem_B_WSTRB,
        m_axi_gmem_B_WLAST,
        m_axi_gmem_B_WID,
        m_axi_gmem_B_WUSER,
        m_axi_gmem_B_ARVALID,
        m_axi_gmem_B_ARREADY,
        m_axi_gmem_B_ARADDR,
        m_axi_gmem_B_ARID,
        m_axi_gmem_B_ARLEN,
        m_axi_gmem_B_ARSIZE,
        m_axi_gmem_B_ARBURST,
        m_axi_gmem_B_ARLOCK,
        m_axi_gmem_B_ARCACHE,
        m_axi_gmem_B_ARPROT,
        m_axi_gmem_B_ARQOS,
        m_axi_gmem_B_ARREGION,
        m_axi_gmem_B_ARUSER,
        m_axi_gmem_B_RVALID,
        m_axi_gmem_B_RREADY,
        m_axi_gmem_B_RDATA,
        m_axi_gmem_B_RLAST,
        m_axi_gmem_B_RID,
        m_axi_gmem_B_RUSER,
        m_axi_gmem_B_RRESP,
        m_axi_gmem_B_BVALID,
        m_axi_gmem_B_BREADY,
        m_axi_gmem_B_BRESP,
        m_axi_gmem_B_BID,
        m_axi_gmem_B_BUSER,
        fifo_B_B_IO_L3_in_serialize1260_din,
        fifo_B_B_IO_L3_in_serialize1260_full_n,
        fifo_B_B_IO_L3_in_serialize1260_write,
        sext_ln373
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_B_AWVALID;
input   m_axi_gmem_B_AWREADY;
output  [63:0] m_axi_gmem_B_AWADDR;
output  [0:0] m_axi_gmem_B_AWID;
output  [31:0] m_axi_gmem_B_AWLEN;
output  [2:0] m_axi_gmem_B_AWSIZE;
output  [1:0] m_axi_gmem_B_AWBURST;
output  [1:0] m_axi_gmem_B_AWLOCK;
output  [3:0] m_axi_gmem_B_AWCACHE;
output  [2:0] m_axi_gmem_B_AWPROT;
output  [3:0] m_axi_gmem_B_AWQOS;
output  [3:0] m_axi_gmem_B_AWREGION;
output  [0:0] m_axi_gmem_B_AWUSER;
output   m_axi_gmem_B_WVALID;
input   m_axi_gmem_B_WREADY;
output  [511:0] m_axi_gmem_B_WDATA;
output  [63:0] m_axi_gmem_B_WSTRB;
output   m_axi_gmem_B_WLAST;
output  [0:0] m_axi_gmem_B_WID;
output  [0:0] m_axi_gmem_B_WUSER;
output   m_axi_gmem_B_ARVALID;
input   m_axi_gmem_B_ARREADY;
output  [63:0] m_axi_gmem_B_ARADDR;
output  [0:0] m_axi_gmem_B_ARID;
output  [31:0] m_axi_gmem_B_ARLEN;
output  [2:0] m_axi_gmem_B_ARSIZE;
output  [1:0] m_axi_gmem_B_ARBURST;
output  [1:0] m_axi_gmem_B_ARLOCK;
output  [3:0] m_axi_gmem_B_ARCACHE;
output  [2:0] m_axi_gmem_B_ARPROT;
output  [3:0] m_axi_gmem_B_ARQOS;
output  [3:0] m_axi_gmem_B_ARREGION;
output  [0:0] m_axi_gmem_B_ARUSER;
input   m_axi_gmem_B_RVALID;
output   m_axi_gmem_B_RREADY;
input  [511:0] m_axi_gmem_B_RDATA;
input   m_axi_gmem_B_RLAST;
input  [0:0] m_axi_gmem_B_RID;
input  [0:0] m_axi_gmem_B_RUSER;
input  [1:0] m_axi_gmem_B_RRESP;
input   m_axi_gmem_B_BVALID;
output   m_axi_gmem_B_BREADY;
input  [1:0] m_axi_gmem_B_BRESP;
input  [0:0] m_axi_gmem_B_BID;
input  [0:0] m_axi_gmem_B_BUSER;
output  [511:0] fifo_B_B_IO_L3_in_serialize1260_din;
input   fifo_B_B_IO_L3_in_serialize1260_full_n;
output   fifo_B_B_IO_L3_in_serialize1260_write;
input  [57:0] sext_ln373;

reg ap_idle;
reg m_axi_gmem_B_RREADY;
reg fifo_B_B_IO_L3_in_serialize1260_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln373_reg_115;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln373_fu_80_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_B_blk_n_R;
wire    ap_block_pp0_stage0;
reg    fifo_B_B_IO_L3_in_serialize1260_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [511:0] fifo_data_reg_119;
reg    ap_condition_exit_pp0_iter1_stage0;
reg   [17:0] i_V_fu_46;
wire    ap_loop_init;
reg   [17:0] ap_sig_allocacmp_i_V_3;
wire   [17:0] i_V_4_fu_86_p2;
reg    ap_block_pp0_stage0_01001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

kernel0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln373_fu_80_p2 == 1'd0))) begin
            i_V_fu_46 <= i_V_4_fu_86_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_V_fu_46 <= 18'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln373_reg_115 <= icmp_ln373_fu_80_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln373_reg_115 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_data_reg_119 <= m_axi_gmem_B_RDATA;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln373_fu_80_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln373_reg_115 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_V_3 = 18'd0;
    end else begin
        ap_sig_allocacmp_i_V_3 = i_V_fu_46;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        fifo_B_B_IO_L3_in_serialize1260_blk_n = fifo_B_B_IO_L3_in_serialize1260_full_n;
    end else begin
        fifo_B_B_IO_L3_in_serialize1260_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_B_B_IO_L3_in_serialize1260_write = 1'b1;
    end else begin
        fifo_B_B_IO_L3_in_serialize1260_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln373_reg_115 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        gmem_B_blk_n_R = m_axi_gmem_B_RVALID;
    end else begin
        gmem_B_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln373_reg_115 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem_B_RREADY = 1'b1;
    end else begin
        m_axi_gmem_B_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((fifo_B_B_IO_L3_in_serialize1260_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln373_reg_115 == 1'd0) & (m_axi_gmem_B_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((fifo_B_B_IO_L3_in_serialize1260_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln373_reg_115 == 1'd0) & (m_axi_gmem_B_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((fifo_B_B_IO_L3_in_serialize1260_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln373_reg_115 == 1'd0) & (m_axi_gmem_B_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((icmp_ln373_reg_115 == 1'd0) & (m_axi_gmem_B_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (fifo_B_B_IO_L3_in_serialize1260_full_n == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign fifo_B_B_IO_L3_in_serialize1260_din = fifo_data_reg_119;

assign i_V_4_fu_86_p2 = (ap_sig_allocacmp_i_V_3 + 18'd1);

assign icmp_ln373_fu_80_p2 = ((ap_sig_allocacmp_i_V_3 == 18'd131072) ? 1'b1 : 1'b0);

assign m_axi_gmem_B_ARADDR = 64'd0;

assign m_axi_gmem_B_ARBURST = 2'd0;

assign m_axi_gmem_B_ARCACHE = 4'd0;

assign m_axi_gmem_B_ARID = 1'd0;

assign m_axi_gmem_B_ARLEN = 32'd0;

assign m_axi_gmem_B_ARLOCK = 2'd0;

assign m_axi_gmem_B_ARPROT = 3'd0;

assign m_axi_gmem_B_ARQOS = 4'd0;

assign m_axi_gmem_B_ARREGION = 4'd0;

assign m_axi_gmem_B_ARSIZE = 3'd0;

assign m_axi_gmem_B_ARUSER = 1'd0;

assign m_axi_gmem_B_ARVALID = 1'b0;

assign m_axi_gmem_B_AWADDR = 64'd0;

assign m_axi_gmem_B_AWBURST = 2'd0;

assign m_axi_gmem_B_AWCACHE = 4'd0;

assign m_axi_gmem_B_AWID = 1'd0;

assign m_axi_gmem_B_AWLEN = 32'd0;

assign m_axi_gmem_B_AWLOCK = 2'd0;

assign m_axi_gmem_B_AWPROT = 3'd0;

assign m_axi_gmem_B_AWQOS = 4'd0;

assign m_axi_gmem_B_AWREGION = 4'd0;

assign m_axi_gmem_B_AWSIZE = 3'd0;

assign m_axi_gmem_B_AWUSER = 1'd0;

assign m_axi_gmem_B_AWVALID = 1'b0;

assign m_axi_gmem_B_BREADY = 1'b0;

assign m_axi_gmem_B_WDATA = 512'd0;

assign m_axi_gmem_B_WID = 1'd0;

assign m_axi_gmem_B_WLAST = 1'b0;

assign m_axi_gmem_B_WSTRB = 64'd0;

assign m_axi_gmem_B_WUSER = 1'd0;

assign m_axi_gmem_B_WVALID = 1'b0;

endmodule //kernel0_B_IO_L3_in_serialize_Pipeline_VITIS_LOOP_373_1
