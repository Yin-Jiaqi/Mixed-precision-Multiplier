// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kernel0_PE (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fifo_A_PE_0_01294_dout,
        fifo_A_PE_0_01294_empty_n,
        fifo_A_PE_0_01294_read,
        fifo_B_PE_0_01566_dout,
        fifo_B_PE_0_01566_empty_n,
        fifo_B_PE_0_01566_read,
        fifo_B_PE_1_01567_din,
        fifo_B_PE_1_01567_full_n,
        fifo_B_PE_1_01567_write,
        fifo_A_PE_0_11295_din,
        fifo_A_PE_0_11295_full_n,
        fifo_A_PE_0_11295_write,
        fifo_C_drain_PE_0_01838_din,
        fifo_C_drain_PE_0_01838_full_n,
        fifo_C_drain_PE_0_01838_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [511:0] fifo_A_PE_0_01294_dout;
input   fifo_A_PE_0_01294_empty_n;
output   fifo_A_PE_0_01294_read;
input  [511:0] fifo_B_PE_0_01566_dout;
input   fifo_B_PE_0_01566_empty_n;
output   fifo_B_PE_0_01566_read;
output  [511:0] fifo_B_PE_1_01567_din;
input   fifo_B_PE_1_01567_full_n;
output   fifo_B_PE_1_01567_write;
output  [511:0] fifo_A_PE_0_11295_din;
input   fifo_A_PE_0_11295_full_n;
output   fifo_A_PE_0_11295_write;
output  [15:0] fifo_C_drain_PE_0_01838_din;
input   fifo_C_drain_PE_0_01838_full_n;
output   fifo_C_drain_PE_0_01838_write;

reg ap_idle;
reg fifo_A_PE_0_01294_read;
reg fifo_B_PE_0_01566_read;
reg fifo_B_PE_1_01567_write;
reg fifo_A_PE_0_11295_write;
reg fifo_C_drain_PE_0_01838_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
reg   [0:0] select_ln689_2_reg_2060;
reg   [0:0] select_ln689_2_reg_2060_pp0_iter5_reg;
reg    ap_block_state7_pp0_stage0_iter6;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1069_fu_349_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    fifo_A_PE_0_01294_blk_n;
wire    ap_block_pp0_stage0;
reg    fifo_A_PE_0_11295_blk_n;
reg    fifo_B_PE_0_01566_blk_n;
reg    fifo_B_PE_1_01567_blk_n;
reg    fifo_C_drain_PE_0_01838_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln1069_1_fu_375_p2;
reg   [0:0] icmp_ln1069_1_reg_1688;
reg   [0:0] icmp_ln1069_1_reg_1688_pp0_iter2_reg;
wire   [0:0] xor_ln687_fu_381_p2;
reg   [0:0] xor_ln687_reg_1693;
wire   [0:0] and_ln687_3_fu_405_p2;
reg   [0:0] and_ln687_3_reg_1699;
reg   [0:0] and_ln687_3_reg_1699_pp0_iter2_reg;
wire   [0:0] or_ln688_fu_411_p2;
reg   [0:0] or_ln688_reg_1704;
wire   [0:0] or_ln688_2_fu_423_p2;
reg   [0:0] or_ln688_2_reg_1710;
wire   [0:0] and_ln688_2_fu_429_p2;
reg   [0:0] and_ln688_2_reg_1716;
reg   [0:0] and_ln688_2_reg_1716_pp0_iter2_reg;
wire   [0:0] or_ln689_1_fu_441_p2;
reg   [0:0] or_ln689_1_reg_1725;
reg  signed [15:0] v2_V_92_reg_1735;
reg  signed [15:0] v2_V_93_reg_1740;
reg  signed [15:0] v2_V_95_reg_1750;
reg  signed [15:0] v2_V_97_reg_1760;
reg  signed [15:0] v2_V_99_reg_1770;
reg  signed [15:0] v2_V_101_reg_1780;
reg  signed [15:0] v2_V_103_reg_1790;
reg  signed [15:0] v2_V_106_reg_1805;
reg  signed [15:0] v2_V_107_reg_1810;
reg  signed [15:0] v2_V_109_reg_1820;
reg  signed [15:0] v2_V_111_reg_1830;
reg  signed [15:0] v2_V_113_reg_1840;
reg  signed [15:0] v2_V_115_reg_1850;
reg  signed [15:0] v2_V_117_reg_1860;
reg  signed [15:0] v2_V_119_reg_1870;
reg  signed [15:0] v1_V_1_reg_1885;
reg  signed [15:0] v2_V_61_reg_1895;
reg  signed [15:0] v2_V_62_reg_1900;
reg  signed [15:0] v2_V_64_reg_1910;
reg  signed [15:0] v2_V_66_reg_1920;
reg  signed [15:0] v2_V_68_reg_1930;
reg  signed [15:0] v2_V_70_reg_1940;
reg  signed [15:0] v2_V_72_reg_1950;
reg  signed [15:0] v2_V_75_reg_1965;
reg  signed [15:0] v2_V_76_reg_1970;
reg  signed [15:0] v2_V_78_reg_1980;
reg  signed [15:0] v2_V_80_reg_1990;
reg  signed [15:0] v2_V_82_reg_2000;
reg  signed [15:0] v2_V_84_reg_2010;
reg  signed [15:0] v2_V_86_reg_2020;
reg  signed [15:0] v2_V_88_reg_2030;
reg  signed [15:0] v1_V_reg_2045;
wire   [0:0] cmp_i_i135998_fu_1150_p2;
reg   [0:0] cmp_i_i135998_reg_2050;
wire   [0:0] cmp_i_i1359_mid1_fu_1208_p2;
reg   [0:0] cmp_i_i1359_mid1_reg_2055;
wire   [0:0] select_ln689_2_fu_1220_p3;
reg   [0:0] select_ln689_2_reg_2060_pp0_iter3_reg;
reg   [0:0] select_ln689_2_reg_2060_pp0_iter4_reg;
reg   [7:0] local_C_addr_reg_2064;
reg   [7:0] local_C_addr_reg_2064_pp0_iter3_reg;
reg   [7:0] local_C_addr_reg_2064_pp0_iter4_reg;
reg   [7:0] local_C_addr_reg_2064_pp0_iter5_reg;
wire   [15:0] grp_fu_1422_p2;
wire   [15:0] grp_fu_1428_p2;
wire   [15:0] grp_fu_1434_p2;
wire   [15:0] grp_fu_1440_p2;
wire   [15:0] grp_fu_1446_p2;
wire   [15:0] grp_fu_1452_p2;
wire   [15:0] grp_fu_1458_p2;
wire   [15:0] grp_fu_1472_p2;
wire   [15:0] grp_fu_1478_p2;
wire   [15:0] grp_fu_1484_p2;
wire   [15:0] grp_fu_1490_p2;
wire   [15:0] grp_fu_1496_p2;
wire   [15:0] grp_fu_1502_p2;
wire   [15:0] grp_fu_1508_p2;
wire   [15:0] grp_fu_1514_p2;
wire   [15:0] grp_fu_1464_p3;
wire   [15:0] add_ln728_31_fu_1416_p2;
reg   [15:0] add_ln728_31_reg_2155;
wire   [7:0] local_C_address0;
reg    local_C_ce0;
wire   [15:0] local_C_q0;
reg    local_C_ce1;
reg    local_C_we1;
wire   [63:0] p_cast_fu_1299_p1;
reg   [4:0] c7_V_fu_228;
wire   [4:0] add_ln870_2_fu_1304_p2;
wire    ap_loop_init;
reg   [4:0] c6_V_fu_232;
wire   [4:0] select_ln1069_2_fu_1269_p3;
reg   [9:0] indvar_flatten_fu_236;
wire   [9:0] select_ln1069_3_fu_1090_p3;
reg   [5:0] c2_V_fu_240;
wire   [5:0] select_ln1069_fu_1238_p3;
reg   [14:0] indvar_flatten13_fu_244;
wire   [14:0] select_ln1069_4_fu_1104_p3;
reg   [16:0] indvar_flatten39_fu_248;
wire   [16:0] select_ln1069_5_fu_1118_p3;
reg   [17:0] indvar_flatten73_fu_252;
reg   [17:0] ap_sig_allocacmp_indvar_flatten73_load;
wire   [17:0] add_ln1069_3_fu_355_p2;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln1069_2_fu_387_p2;
wire   [0:0] icmp_ln1069_3_fu_399_p2;
wire   [0:0] xor_ln688_fu_417_p2;
wire   [0:0] and_ln687_2_fu_393_p2;
wire   [0:0] or_ln689_fu_435_p2;
wire   [9:0] add_ln1069_fu_1084_p2;
wire   [14:0] add_ln1069_1_fu_1098_p2;
wire   [16:0] add_ln1069_2_fu_1112_p2;
wire   [0:0] cmp_i_i97_fu_1156_p2;
wire   [0:0] icmp_ln1069101_fu_1167_p2;
wire   [0:0] and_ln687_fu_1162_p2;
wire   [0:0] and_ln687_1_fu_1173_p2;
wire   [5:0] select_ln688_fu_1178_p3;
wire   [5:0] add_ln870_fu_1195_p2;
wire   [0:0] cmp_i_i_mid1_fu_1214_p2;
wire   [0:0] and_ln688_fu_1185_p2;
wire   [0:0] and_ln688_1_fu_1190_p2;
wire   [0:0] xor_ln689_fu_1227_p2;
wire   [4:0] select_ln689_fu_1201_p3;
wire   [0:0] and_ln689_fu_1232_p2;
wire   [0:0] or_ln1069_fu_1251_p2;
wire   [0:0] or_ln1069_1_fu_1256_p2;
wire   [4:0] add_ln870_1_fu_1245_p2;
wire   [4:0] select_ln1069_1_fu_1261_p3;
wire   [3:0] empty_1245_fu_1281_p1;
wire   [7:0] tmp_2_cast_fu_1285_p3;
wire   [7:0] zext_ln1069_fu_1277_p1;
wire   [7:0] empty_1246_fu_1293_p2;
wire   [0:0] or_ln687_fu_1325_p2;
wire   [0:0] or_ln688_1_fu_1329_p2;
wire   [0:0] select_ln689_1_fu_1334_p3;
wire  signed [15:0] add_ln728_2_fu_1348_p0;
wire   [15:0] grp_fu_1618_p3;
wire  signed [15:0] add_ln728_2_fu_1348_p1;
wire   [15:0] grp_fu_1625_p3;
wire  signed [15:0] add_ln728_5_fu_1352_p0;
wire   [15:0] grp_fu_1611_p3;
wire  signed [15:0] add_ln728_5_fu_1352_p1;
wire   [15:0] grp_fu_1604_p3;
(* use_dsp48 = "no" *) wire   [15:0] add_ln728_5_fu_1352_p2;
(* use_dsp48 = "no" *) wire   [15:0] add_ln728_2_fu_1348_p2;
wire  signed [15:0] add_ln728_9_fu_1362_p0;
wire   [15:0] grp_fu_1583_p3;
wire  signed [15:0] add_ln728_9_fu_1362_p1;
wire   [15:0] grp_fu_1576_p3;
wire  signed [15:0] add_ln728_12_fu_1366_p0;
wire   [15:0] grp_fu_1597_p3;
wire  signed [15:0] add_ln728_12_fu_1366_p1;
wire   [15:0] grp_fu_1590_p3;
(* use_dsp48 = "no" *) wire   [15:0] add_ln728_12_fu_1366_p2;
(* use_dsp48 = "no" *) wire   [15:0] add_ln728_9_fu_1362_p2;
wire   [15:0] add_ln728_13_fu_1370_p2;
wire   [15:0] add_ln728_6_fu_1356_p2;
wire  signed [15:0] add_ln728_17_fu_1382_p0;
wire   [15:0] grp_fu_1527_p3;
wire  signed [15:0] add_ln728_17_fu_1382_p1;
wire   [15:0] grp_fu_1520_p3;
wire  signed [15:0] add_ln728_20_fu_1386_p0;
wire   [15:0] grp_fu_1541_p3;
wire  signed [15:0] add_ln728_20_fu_1386_p1;
wire   [15:0] grp_fu_1534_p3;
(* use_dsp48 = "no" *) wire   [15:0] add_ln728_20_fu_1386_p2;
(* use_dsp48 = "no" *) wire   [15:0] add_ln728_17_fu_1382_p2;
wire  signed [15:0] add_ln728_24_fu_1396_p0;
wire   [15:0] grp_fu_1555_p3;
wire  signed [15:0] add_ln728_24_fu_1396_p1;
wire   [15:0] grp_fu_1548_p3;
wire  signed [15:0] add_ln728_28_fu_1400_p0;
wire   [15:0] grp_fu_1569_p3;
wire  signed [15:0] add_ln728_28_fu_1400_p1;
wire   [15:0] grp_fu_1562_p3;
(* use_dsp48 = "no" *) wire   [15:0] add_ln728_28_fu_1400_p2;
(* use_dsp48 = "no" *) wire   [15:0] add_ln728_24_fu_1396_p2;
wire   [15:0] add_ln728_29_fu_1404_p2;
wire   [15:0] add_ln728_21_fu_1390_p2;
wire   [15:0] add_ln728_30_fu_1410_p2;
wire   [15:0] add_ln728_14_fu_1376_p2;
wire  signed [15:0] grp_fu_1422_p0;
wire  signed [15:0] grp_fu_1422_p1;
wire  signed [15:0] grp_fu_1428_p0;
wire  signed [15:0] grp_fu_1428_p1;
wire  signed [15:0] grp_fu_1434_p0;
wire  signed [15:0] grp_fu_1434_p1;
wire  signed [15:0] grp_fu_1440_p0;
wire  signed [15:0] grp_fu_1440_p1;
wire  signed [15:0] grp_fu_1446_p0;
wire  signed [15:0] grp_fu_1446_p1;
wire  signed [15:0] grp_fu_1452_p0;
wire  signed [15:0] grp_fu_1452_p1;
wire  signed [15:0] grp_fu_1458_p0;
wire  signed [15:0] grp_fu_1458_p1;
wire  signed [15:0] grp_fu_1464_p0;
wire  signed [15:0] grp_fu_1464_p1;
wire   [15:0] grp_fu_1464_p2;
wire  signed [15:0] grp_fu_1472_p0;
wire  signed [15:0] grp_fu_1472_p1;
wire  signed [15:0] grp_fu_1478_p0;
wire  signed [15:0] grp_fu_1478_p1;
wire  signed [15:0] grp_fu_1484_p0;
wire  signed [15:0] grp_fu_1484_p1;
wire  signed [15:0] grp_fu_1490_p0;
wire  signed [15:0] grp_fu_1490_p1;
wire  signed [15:0] grp_fu_1496_p0;
wire  signed [15:0] grp_fu_1496_p1;
wire  signed [15:0] grp_fu_1502_p0;
wire  signed [15:0] grp_fu_1502_p1;
wire  signed [15:0] grp_fu_1508_p0;
wire  signed [15:0] grp_fu_1508_p1;
wire  signed [15:0] grp_fu_1514_p0;
wire  signed [15:0] grp_fu_1514_p1;
reg    grp_fu_1422_ce;
reg    grp_fu_1428_ce;
reg    grp_fu_1434_ce;
reg    grp_fu_1440_ce;
reg    grp_fu_1446_ce;
reg    grp_fu_1452_ce;
reg    grp_fu_1458_ce;
reg    grp_fu_1464_ce;
reg    grp_fu_1472_ce;
reg    grp_fu_1478_ce;
reg    grp_fu_1484_ce;
reg    grp_fu_1490_ce;
reg    grp_fu_1496_ce;
reg    grp_fu_1502_ce;
reg    grp_fu_1508_ce;
reg    grp_fu_1514_ce;
reg    grp_fu_1520_ce;
reg    grp_fu_1527_ce;
reg    grp_fu_1534_ce;
reg    grp_fu_1541_ce;
reg    grp_fu_1548_ce;
reg    grp_fu_1555_ce;
reg    grp_fu_1562_ce;
reg    grp_fu_1569_ce;
reg    grp_fu_1576_ce;
reg    grp_fu_1583_ce;
reg    grp_fu_1590_ce;
reg    grp_fu_1597_ce;
reg    grp_fu_1604_ce;
reg    grp_fu_1611_ce;
reg    grp_fu_1618_ce;
reg    grp_fu_1625_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_done_reg = 1'b0;
end

kernel0_PE_local_C #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
local_C_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_C_address0),
    .ce0(local_C_ce0),
    .q0(local_C_q0),
    .address1(local_C_addr_reg_2064_pp0_iter5_reg),
    .ce1(local_C_ce1),
    .we1(local_C_we1),
    .d1(add_ln728_31_reg_2155)
);

kernel0_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U143(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1422_p0),
    .din1(grp_fu_1422_p1),
    .ce(grp_fu_1422_ce),
    .dout(grp_fu_1422_p2)
);

kernel0_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U144(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1428_p0),
    .din1(grp_fu_1428_p1),
    .ce(grp_fu_1428_ce),
    .dout(grp_fu_1428_p2)
);

kernel0_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U145(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1434_p0),
    .din1(grp_fu_1434_p1),
    .ce(grp_fu_1434_ce),
    .dout(grp_fu_1434_p2)
);

kernel0_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U146(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1440_p0),
    .din1(grp_fu_1440_p1),
    .ce(grp_fu_1440_ce),
    .dout(grp_fu_1440_p2)
);

kernel0_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U147(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1446_p0),
    .din1(grp_fu_1446_p1),
    .ce(grp_fu_1446_ce),
    .dout(grp_fu_1446_p2)
);

kernel0_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U148(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1452_p0),
    .din1(grp_fu_1452_p1),
    .ce(grp_fu_1452_ce),
    .dout(grp_fu_1452_p2)
);

kernel0_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U149(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1458_p0),
    .din1(grp_fu_1458_p1),
    .ce(grp_fu_1458_ce),
    .dout(grp_fu_1458_p2)
);

kernel0_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U150(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1464_p0),
    .din1(grp_fu_1464_p1),
    .din2(grp_fu_1464_p2),
    .ce(grp_fu_1464_ce),
    .dout(grp_fu_1464_p3)
);

kernel0_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U151(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1472_p0),
    .din1(grp_fu_1472_p1),
    .ce(grp_fu_1472_ce),
    .dout(grp_fu_1472_p2)
);

kernel0_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U152(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1478_p0),
    .din1(grp_fu_1478_p1),
    .ce(grp_fu_1478_ce),
    .dout(grp_fu_1478_p2)
);

kernel0_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U153(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1484_p0),
    .din1(grp_fu_1484_p1),
    .ce(grp_fu_1484_ce),
    .dout(grp_fu_1484_p2)
);

kernel0_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U154(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1490_p0),
    .din1(grp_fu_1490_p1),
    .ce(grp_fu_1490_ce),
    .dout(grp_fu_1490_p2)
);

kernel0_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U155(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1496_p0),
    .din1(grp_fu_1496_p1),
    .ce(grp_fu_1496_ce),
    .dout(grp_fu_1496_p2)
);

kernel0_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U156(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1502_p0),
    .din1(grp_fu_1502_p1),
    .ce(grp_fu_1502_ce),
    .dout(grp_fu_1502_p2)
);

kernel0_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U157(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1508_p0),
    .din1(grp_fu_1508_p1),
    .ce(grp_fu_1508_ce),
    .dout(grp_fu_1508_p2)
);

kernel0_mul_mul_16s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_mul_16s_16s_16_4_1_U158(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1514_p0),
    .din1(grp_fu_1514_p1),
    .ce(grp_fu_1514_ce),
    .dout(grp_fu_1514_p2)
);

kernel0_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U159(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_61_reg_1895),
    .din1(v2_V_92_reg_1735),
    .din2(grp_fu_1422_p2),
    .ce(grp_fu_1520_ce),
    .dout(grp_fu_1520_p3)
);

kernel0_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U160(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_62_reg_1900),
    .din1(v2_V_93_reg_1740),
    .din2(grp_fu_1428_p2),
    .ce(grp_fu_1527_ce),
    .dout(grp_fu_1527_p3)
);

kernel0_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U161(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_64_reg_1910),
    .din1(v2_V_95_reg_1750),
    .din2(grp_fu_1434_p2),
    .ce(grp_fu_1534_ce),
    .dout(grp_fu_1534_p3)
);

kernel0_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U162(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_66_reg_1920),
    .din1(v2_V_97_reg_1760),
    .din2(grp_fu_1440_p2),
    .ce(grp_fu_1541_ce),
    .dout(grp_fu_1541_p3)
);

kernel0_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U163(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_68_reg_1930),
    .din1(v2_V_99_reg_1770),
    .din2(grp_fu_1446_p2),
    .ce(grp_fu_1548_ce),
    .dout(grp_fu_1548_p3)
);

kernel0_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U164(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_70_reg_1940),
    .din1(v2_V_101_reg_1780),
    .din2(grp_fu_1452_p2),
    .ce(grp_fu_1555_ce),
    .dout(grp_fu_1555_p3)
);

kernel0_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U165(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_72_reg_1950),
    .din1(v2_V_103_reg_1790),
    .din2(grp_fu_1458_p2),
    .ce(grp_fu_1562_ce),
    .dout(grp_fu_1562_p3)
);

kernel0_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U166(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_75_reg_1965),
    .din1(v2_V_106_reg_1805),
    .din2(grp_fu_1464_p3),
    .ce(grp_fu_1569_ce),
    .dout(grp_fu_1569_p3)
);

kernel0_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U167(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_76_reg_1970),
    .din1(v2_V_107_reg_1810),
    .din2(grp_fu_1472_p2),
    .ce(grp_fu_1576_ce),
    .dout(grp_fu_1576_p3)
);

kernel0_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U168(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_78_reg_1980),
    .din1(v2_V_109_reg_1820),
    .din2(grp_fu_1478_p2),
    .ce(grp_fu_1583_ce),
    .dout(grp_fu_1583_p3)
);

kernel0_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U169(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_80_reg_1990),
    .din1(v2_V_111_reg_1830),
    .din2(grp_fu_1484_p2),
    .ce(grp_fu_1590_ce),
    .dout(grp_fu_1590_p3)
);

kernel0_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U170(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_82_reg_2000),
    .din1(v2_V_113_reg_1840),
    .din2(grp_fu_1490_p2),
    .ce(grp_fu_1597_ce),
    .dout(grp_fu_1597_p3)
);

kernel0_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U171(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_84_reg_2010),
    .din1(v2_V_115_reg_1850),
    .din2(grp_fu_1496_p2),
    .ce(grp_fu_1604_ce),
    .dout(grp_fu_1604_p3)
);

kernel0_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U172(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_86_reg_2020),
    .din1(v2_V_117_reg_1860),
    .din2(grp_fu_1502_p2),
    .ce(grp_fu_1611_ce),
    .dout(grp_fu_1611_p3)
);

kernel0_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U173(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v2_V_88_reg_2030),
    .din1(v2_V_119_reg_1870),
    .din2(grp_fu_1508_p2),
    .ce(grp_fu_1618_ce),
    .dout(grp_fu_1618_p3)
);

kernel0_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U174(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v1_V_reg_2045),
    .din1(v1_V_1_reg_1885),
    .din2(grp_fu_1514_p2),
    .ce(grp_fu_1625_ce),
    .dout(grp_fu_1625_p3)
);

kernel0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            c2_V_fu_240 <= 6'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            c2_V_fu_240 <= select_ln1069_fu_1238_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            c6_V_fu_232 <= 5'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            c6_V_fu_232 <= select_ln1069_2_fu_1269_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            c7_V_fu_228 <= 5'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            c7_V_fu_228 <= add_ln870_2_fu_1304_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten13_fu_244 <= 15'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            indvar_flatten13_fu_244 <= select_ln1069_4_fu_1104_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten39_fu_248 <= 17'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            indvar_flatten39_fu_248 <= select_ln1069_5_fu_1118_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1069_fu_349_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten73_fu_252 <= add_ln1069_3_fu_355_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten73_fu_252 <= 18'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_236 <= 10'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            indvar_flatten_fu_236 <= select_ln1069_3_fu_1090_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln728_31_reg_2155 <= add_ln728_31_fu_1416_p2;
        and_ln687_3_reg_1699_pp0_iter2_reg <= and_ln687_3_reg_1699;
        and_ln688_2_reg_1716_pp0_iter2_reg <= and_ln688_2_reg_1716;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        icmp_ln1069_1_reg_1688_pp0_iter2_reg <= icmp_ln1069_1_reg_1688;
        local_C_addr_reg_2064 <= p_cast_fu_1299_p1;
        local_C_addr_reg_2064_pp0_iter3_reg <= local_C_addr_reg_2064;
        local_C_addr_reg_2064_pp0_iter4_reg <= local_C_addr_reg_2064_pp0_iter3_reg;
        local_C_addr_reg_2064_pp0_iter5_reg <= local_C_addr_reg_2064_pp0_iter4_reg;
        select_ln689_2_reg_2060 <= select_ln689_2_fu_1220_p3;
        select_ln689_2_reg_2060_pp0_iter3_reg <= select_ln689_2_reg_2060;
        select_ln689_2_reg_2060_pp0_iter4_reg <= select_ln689_2_reg_2060_pp0_iter3_reg;
        select_ln689_2_reg_2060_pp0_iter5_reg <= select_ln689_2_reg_2060_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln687_3_reg_1699 <= and_ln687_3_fu_405_p2;
        and_ln688_2_reg_1716 <= and_ln688_2_fu_429_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln1069_1_reg_1688 <= icmp_ln1069_1_fu_375_p2;
        or_ln688_2_reg_1710 <= or_ln688_2_fu_423_p2;
        or_ln688_reg_1704 <= or_ln688_fu_411_p2;
        or_ln689_1_reg_1725 <= or_ln689_1_fu_441_p2;
        v1_V_1_reg_1885 <= {{fifo_A_PE_0_01294_dout[511:496]}};
        v1_V_reg_2045 <= {{fifo_B_PE_0_01566_dout[511:496]}};
        v2_V_101_reg_1780 <= {{fifo_A_PE_0_01294_dout[175:160]}};
        v2_V_103_reg_1790 <= {{fifo_A_PE_0_01294_dout[207:192]}};
        v2_V_106_reg_1805 <= {{fifo_A_PE_0_01294_dout[255:240]}};
        v2_V_107_reg_1810 <= {{fifo_A_PE_0_01294_dout[271:256]}};
        v2_V_109_reg_1820 <= {{fifo_A_PE_0_01294_dout[303:288]}};
        v2_V_111_reg_1830 <= {{fifo_A_PE_0_01294_dout[335:320]}};
        v2_V_113_reg_1840 <= {{fifo_A_PE_0_01294_dout[367:352]}};
        v2_V_115_reg_1850 <= {{fifo_A_PE_0_01294_dout[399:384]}};
        v2_V_117_reg_1860 <= {{fifo_A_PE_0_01294_dout[431:416]}};
        v2_V_119_reg_1870 <= {{fifo_A_PE_0_01294_dout[463:448]}};
        v2_V_61_reg_1895 <= {{fifo_B_PE_0_01566_dout[31:16]}};
        v2_V_62_reg_1900 <= {{fifo_B_PE_0_01566_dout[47:32]}};
        v2_V_64_reg_1910 <= {{fifo_B_PE_0_01566_dout[79:64]}};
        v2_V_66_reg_1920 <= {{fifo_B_PE_0_01566_dout[111:96]}};
        v2_V_68_reg_1930 <= {{fifo_B_PE_0_01566_dout[143:128]}};
        v2_V_70_reg_1940 <= {{fifo_B_PE_0_01566_dout[175:160]}};
        v2_V_72_reg_1950 <= {{fifo_B_PE_0_01566_dout[207:192]}};
        v2_V_75_reg_1965 <= {{fifo_B_PE_0_01566_dout[255:240]}};
        v2_V_76_reg_1970 <= {{fifo_B_PE_0_01566_dout[271:256]}};
        v2_V_78_reg_1980 <= {{fifo_B_PE_0_01566_dout[303:288]}};
        v2_V_80_reg_1990 <= {{fifo_B_PE_0_01566_dout[335:320]}};
        v2_V_82_reg_2000 <= {{fifo_B_PE_0_01566_dout[367:352]}};
        v2_V_84_reg_2010 <= {{fifo_B_PE_0_01566_dout[399:384]}};
        v2_V_86_reg_2020 <= {{fifo_B_PE_0_01566_dout[431:416]}};
        v2_V_88_reg_2030 <= {{fifo_B_PE_0_01566_dout[463:448]}};
        v2_V_92_reg_1735 <= {{fifo_A_PE_0_01294_dout[31:16]}};
        v2_V_93_reg_1740 <= {{fifo_A_PE_0_01294_dout[47:32]}};
        v2_V_95_reg_1750 <= {{fifo_A_PE_0_01294_dout[79:64]}};
        v2_V_97_reg_1760 <= {{fifo_A_PE_0_01294_dout[111:96]}};
        v2_V_99_reg_1770 <= {{fifo_A_PE_0_01294_dout[143:128]}};
        xor_ln687_reg_1693 <= xor_ln687_fu_381_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln688_2_reg_1716))) begin
        cmp_i_i135998_reg_2050 <= cmp_i_i135998_fu_1150_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln688_2_reg_1716))) begin
        cmp_i_i1359_mid1_reg_2055 <= cmp_i_i1359_mid1_fu_1208_p2;
    end
end

always @ (*) begin
    if (((icmp_ln1069_fu_349_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten73_load = 18'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten73_load = indvar_flatten73_fu_252;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_PE_0_01294_blk_n = fifo_A_PE_0_01294_empty_n;
    end else begin
        fifo_A_PE_0_01294_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_PE_0_01294_read = 1'b1;
    end else begin
        fifo_A_PE_0_01294_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_PE_0_11295_blk_n = fifo_A_PE_0_11295_full_n;
    end else begin
        fifo_A_PE_0_11295_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_PE_0_11295_write = 1'b1;
    end else begin
        fifo_A_PE_0_11295_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_PE_0_01566_blk_n = fifo_B_PE_0_01566_empty_n;
    end else begin
        fifo_B_PE_0_01566_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_PE_0_01566_read = 1'b1;
    end else begin
        fifo_B_PE_0_01566_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_PE_1_01567_blk_n = fifo_B_PE_1_01567_full_n;
    end else begin
        fifo_B_PE_1_01567_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_PE_1_01567_write = 1'b1;
    end else begin
        fifo_B_PE_1_01567_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (select_ln689_2_reg_2060_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        fifo_C_drain_PE_0_01838_blk_n = fifo_C_drain_PE_0_01838_full_n;
    end else begin
        fifo_C_drain_PE_0_01838_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln689_2_reg_2060_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        fifo_C_drain_PE_0_01838_write = 1'b1;
    end else begin
        fifo_C_drain_PE_0_01838_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1422_ce = 1'b1;
    end else begin
        grp_fu_1422_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1428_ce = 1'b1;
    end else begin
        grp_fu_1428_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1434_ce = 1'b1;
    end else begin
        grp_fu_1434_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1440_ce = 1'b1;
    end else begin
        grp_fu_1440_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1446_ce = 1'b1;
    end else begin
        grp_fu_1446_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1452_ce = 1'b1;
    end else begin
        grp_fu_1452_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1458_ce = 1'b1;
    end else begin
        grp_fu_1458_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1464_ce = 1'b1;
    end else begin
        grp_fu_1464_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1472_ce = 1'b1;
    end else begin
        grp_fu_1472_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1478_ce = 1'b1;
    end else begin
        grp_fu_1478_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1484_ce = 1'b1;
    end else begin
        grp_fu_1484_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1490_ce = 1'b1;
    end else begin
        grp_fu_1490_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1496_ce = 1'b1;
    end else begin
        grp_fu_1496_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1502_ce = 1'b1;
    end else begin
        grp_fu_1502_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1508_ce = 1'b1;
    end else begin
        grp_fu_1508_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1514_ce = 1'b1;
    end else begin
        grp_fu_1514_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1520_ce = 1'b1;
    end else begin
        grp_fu_1520_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1527_ce = 1'b1;
    end else begin
        grp_fu_1527_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1534_ce = 1'b1;
    end else begin
        grp_fu_1534_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1541_ce = 1'b1;
    end else begin
        grp_fu_1541_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1548_ce = 1'b1;
    end else begin
        grp_fu_1548_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1555_ce = 1'b1;
    end else begin
        grp_fu_1555_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1562_ce = 1'b1;
    end else begin
        grp_fu_1562_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1569_ce = 1'b1;
    end else begin
        grp_fu_1569_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1576_ce = 1'b1;
    end else begin
        grp_fu_1576_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1583_ce = 1'b1;
    end else begin
        grp_fu_1583_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1590_ce = 1'b1;
    end else begin
        grp_fu_1590_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1597_ce = 1'b1;
    end else begin
        grp_fu_1597_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1604_ce = 1'b1;
    end else begin
        grp_fu_1604_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1611_ce = 1'b1;
    end else begin
        grp_fu_1611_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1618_ce = 1'b1;
    end else begin
        grp_fu_1618_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1625_ce = 1'b1;
    end else begin
        grp_fu_1625_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        local_C_ce0 = 1'b1;
    end else begin
        local_C_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        local_C_ce1 = 1'b1;
    end else begin
        local_C_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        local_C_we1 = 1'b1;
    end else begin
        local_C_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1069_1_fu_1098_p2 = (indvar_flatten13_fu_244 + 15'd1);

assign add_ln1069_2_fu_1112_p2 = (indvar_flatten39_fu_248 + 17'd1);

assign add_ln1069_3_fu_355_p2 = (ap_sig_allocacmp_indvar_flatten73_load + 18'd1);

assign add_ln1069_fu_1084_p2 = (indvar_flatten_fu_236 + 10'd1);

assign add_ln728_12_fu_1366_p0 = grp_fu_1597_p3;

assign add_ln728_12_fu_1366_p1 = grp_fu_1590_p3;

assign add_ln728_12_fu_1366_p2 = ($signed(add_ln728_12_fu_1366_p0) + $signed(add_ln728_12_fu_1366_p1));

assign add_ln728_13_fu_1370_p2 = (add_ln728_12_fu_1366_p2 + add_ln728_9_fu_1362_p2);

assign add_ln728_14_fu_1376_p2 = (add_ln728_13_fu_1370_p2 + add_ln728_6_fu_1356_p2);

assign add_ln728_17_fu_1382_p0 = grp_fu_1527_p3;

assign add_ln728_17_fu_1382_p1 = grp_fu_1520_p3;

assign add_ln728_17_fu_1382_p2 = ($signed(add_ln728_17_fu_1382_p0) + $signed(add_ln728_17_fu_1382_p1));

assign add_ln728_20_fu_1386_p0 = grp_fu_1541_p3;

assign add_ln728_20_fu_1386_p1 = grp_fu_1534_p3;

assign add_ln728_20_fu_1386_p2 = ($signed(add_ln728_20_fu_1386_p0) + $signed(add_ln728_20_fu_1386_p1));

assign add_ln728_21_fu_1390_p2 = (add_ln728_20_fu_1386_p2 + add_ln728_17_fu_1382_p2);

assign add_ln728_24_fu_1396_p0 = grp_fu_1555_p3;

assign add_ln728_24_fu_1396_p1 = grp_fu_1548_p3;

assign add_ln728_24_fu_1396_p2 = ($signed(add_ln728_24_fu_1396_p0) + $signed(add_ln728_24_fu_1396_p1));

assign add_ln728_28_fu_1400_p0 = grp_fu_1569_p3;

assign add_ln728_28_fu_1400_p1 = grp_fu_1562_p3;

assign add_ln728_28_fu_1400_p2 = ($signed(add_ln728_28_fu_1400_p0) + $signed(add_ln728_28_fu_1400_p1));

assign add_ln728_29_fu_1404_p2 = (add_ln728_28_fu_1400_p2 + add_ln728_24_fu_1396_p2);

assign add_ln728_2_fu_1348_p0 = grp_fu_1618_p3;

assign add_ln728_2_fu_1348_p1 = grp_fu_1625_p3;

assign add_ln728_2_fu_1348_p2 = ($signed(add_ln728_2_fu_1348_p0) + $signed(add_ln728_2_fu_1348_p1));

assign add_ln728_30_fu_1410_p2 = (add_ln728_29_fu_1404_p2 + add_ln728_21_fu_1390_p2);

assign add_ln728_31_fu_1416_p2 = (add_ln728_30_fu_1410_p2 + add_ln728_14_fu_1376_p2);

assign add_ln728_5_fu_1352_p0 = grp_fu_1611_p3;

assign add_ln728_5_fu_1352_p1 = grp_fu_1604_p3;

assign add_ln728_5_fu_1352_p2 = ($signed(add_ln728_5_fu_1352_p0) + $signed(add_ln728_5_fu_1352_p1));

assign add_ln728_6_fu_1356_p2 = (add_ln728_5_fu_1352_p2 + add_ln728_2_fu_1348_p2);

assign add_ln728_9_fu_1362_p0 = grp_fu_1583_p3;

assign add_ln728_9_fu_1362_p1 = grp_fu_1576_p3;

assign add_ln728_9_fu_1362_p2 = ($signed(add_ln728_9_fu_1362_p0) + $signed(add_ln728_9_fu_1362_p1));

assign add_ln870_1_fu_1245_p2 = (select_ln689_fu_1201_p3 + 5'd1);

assign add_ln870_2_fu_1304_p2 = (select_ln1069_1_fu_1261_p3 + 5'd1);

assign add_ln870_fu_1195_p2 = (select_ln688_fu_1178_p3 + 6'd1);

assign and_ln687_1_fu_1173_p2 = (xor_ln687_reg_1693 & icmp_ln1069101_fu_1167_p2);

assign and_ln687_2_fu_393_p2 = (xor_ln687_fu_381_p2 & icmp_ln1069_2_fu_387_p2);

assign and_ln687_3_fu_405_p2 = (xor_ln687_fu_381_p2 & icmp_ln1069_3_fu_399_p2);

assign and_ln687_fu_1162_p2 = (xor_ln687_reg_1693 & cmp_i_i97_fu_1156_p2);

assign and_ln688_1_fu_1190_p2 = (or_ln688_2_reg_1710 & and_ln687_1_fu_1173_p2);

assign and_ln688_2_fu_429_p2 = (or_ln688_2_fu_423_p2 & and_ln687_2_fu_393_p2);

assign and_ln688_fu_1185_p2 = (or_ln688_2_reg_1710 & and_ln687_fu_1162_p2);

assign and_ln689_fu_1232_p2 = (xor_ln689_fu_1227_p2 & and_ln688_1_fu_1190_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((select_ln689_2_reg_2060_pp0_iter5_reg == 1'd1) & (fifo_C_drain_PE_0_01838_full_n == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((fifo_A_PE_0_11295_full_n == 1'b0) | (fifo_B_PE_1_01567_full_n == 1'b0) | (fifo_B_PE_0_01566_empty_n == 1'b0) | (fifo_A_PE_0_01294_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((select_ln689_2_reg_2060_pp0_iter5_reg == 1'd1) & (fifo_C_drain_PE_0_01838_full_n == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((fifo_A_PE_0_11295_full_n == 1'b0) | (fifo_B_PE_1_01567_full_n == 1'b0) | (fifo_B_PE_0_01566_empty_n == 1'b0) | (fifo_A_PE_0_01294_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((select_ln689_2_reg_2060_pp0_iter5_reg == 1'd1) & (fifo_C_drain_PE_0_01838_full_n == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((fifo_A_PE_0_11295_full_n == 1'b0) | (fifo_B_PE_1_01567_full_n == 1'b0) | (fifo_B_PE_0_01566_empty_n == 1'b0) | (fifo_A_PE_0_01294_empty_n == 1'b0))));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((fifo_A_PE_0_11295_full_n == 1'b0) | (fifo_B_PE_1_01567_full_n == 1'b0) | (fifo_B_PE_0_01566_empty_n == 1'b0) | (fifo_A_PE_0_01294_empty_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter6 = ((select_ln689_2_reg_2060_pp0_iter5_reg == 1'd1) & (fifo_C_drain_PE_0_01838_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign cmp_i_i135998_fu_1150_p2 = ((c2_V_fu_240 == 6'd0) ? 1'b1 : 1'b0);

assign cmp_i_i1359_mid1_fu_1208_p2 = ((add_ln870_fu_1195_p2 == 6'd0) ? 1'b1 : 1'b0);

assign cmp_i_i97_fu_1156_p2 = ((c2_V_fu_240 == 6'd31) ? 1'b1 : 1'b0);

assign cmp_i_i_mid1_fu_1214_p2 = ((add_ln870_fu_1195_p2 == 6'd31) ? 1'b1 : 1'b0);

assign empty_1245_fu_1281_p1 = select_ln1069_1_fu_1261_p3[3:0];

assign empty_1246_fu_1293_p2 = (tmp_2_cast_fu_1285_p3 + zext_ln1069_fu_1277_p1);

assign fifo_A_PE_0_11295_din = fifo_A_PE_0_01294_dout;

assign fifo_B_PE_1_01567_din = fifo_B_PE_0_01566_dout;

assign fifo_C_drain_PE_0_01838_din = add_ln728_31_reg_2155;

assign grp_fu_1422_p0 = fifo_B_PE_0_01566_dout[15:0];

assign grp_fu_1422_p1 = fifo_A_PE_0_01294_dout[15:0];

assign grp_fu_1428_p0 = {{fifo_B_PE_0_01566_dout[63:48]}};

assign grp_fu_1428_p1 = {{fifo_A_PE_0_01294_dout[63:48]}};

assign grp_fu_1434_p0 = {{fifo_B_PE_0_01566_dout[95:80]}};

assign grp_fu_1434_p1 = {{fifo_A_PE_0_01294_dout[95:80]}};

assign grp_fu_1440_p0 = {{fifo_B_PE_0_01566_dout[127:112]}};

assign grp_fu_1440_p1 = {{fifo_A_PE_0_01294_dout[127:112]}};

assign grp_fu_1446_p0 = {{fifo_B_PE_0_01566_dout[159:144]}};

assign grp_fu_1446_p1 = {{fifo_A_PE_0_01294_dout[159:144]}};

assign grp_fu_1452_p0 = {{fifo_B_PE_0_01566_dout[191:176]}};

assign grp_fu_1452_p1 = {{fifo_A_PE_0_01294_dout[191:176]}};

assign grp_fu_1458_p0 = {{fifo_B_PE_0_01566_dout[223:208]}};

assign grp_fu_1458_p1 = {{fifo_A_PE_0_01294_dout[223:208]}};

assign grp_fu_1464_p0 = {{fifo_B_PE_0_01566_dout[239:224]}};

assign grp_fu_1464_p1 = {{fifo_A_PE_0_01294_dout[239:224]}};

assign grp_fu_1464_p2 = ((select_ln689_1_fu_1334_p3[0:0] == 1'b1) ? 16'd0 : local_C_q0);

assign grp_fu_1472_p0 = {{fifo_B_PE_0_01566_dout[287:272]}};

assign grp_fu_1472_p1 = {{fifo_A_PE_0_01294_dout[287:272]}};

assign grp_fu_1478_p0 = {{fifo_B_PE_0_01566_dout[319:304]}};

assign grp_fu_1478_p1 = {{fifo_A_PE_0_01294_dout[319:304]}};

assign grp_fu_1484_p0 = {{fifo_B_PE_0_01566_dout[351:336]}};

assign grp_fu_1484_p1 = {{fifo_A_PE_0_01294_dout[351:336]}};

assign grp_fu_1490_p0 = {{fifo_B_PE_0_01566_dout[383:368]}};

assign grp_fu_1490_p1 = {{fifo_A_PE_0_01294_dout[383:368]}};

assign grp_fu_1496_p0 = {{fifo_B_PE_0_01566_dout[415:400]}};

assign grp_fu_1496_p1 = {{fifo_A_PE_0_01294_dout[415:400]}};

assign grp_fu_1502_p0 = {{fifo_B_PE_0_01566_dout[447:432]}};

assign grp_fu_1502_p1 = {{fifo_A_PE_0_01294_dout[447:432]}};

assign grp_fu_1508_p0 = {{fifo_B_PE_0_01566_dout[479:464]}};

assign grp_fu_1508_p1 = {{fifo_A_PE_0_01294_dout[479:464]}};

assign grp_fu_1514_p0 = {{fifo_B_PE_0_01566_dout[495:480]}};

assign grp_fu_1514_p1 = {{fifo_A_PE_0_01294_dout[495:480]}};

assign icmp_ln1069101_fu_1167_p2 = ((c7_V_fu_228 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln1069_1_fu_375_p2 = ((indvar_flatten39_fu_248 == 17'd32768) ? 1'b1 : 1'b0);

assign icmp_ln1069_2_fu_387_p2 = ((indvar_flatten_fu_236 == 10'd256) ? 1'b1 : 1'b0);

assign icmp_ln1069_3_fu_399_p2 = ((indvar_flatten13_fu_244 == 15'd8192) ? 1'b1 : 1'b0);

assign icmp_ln1069_fu_349_p2 = ((ap_sig_allocacmp_indvar_flatten73_load == 18'd131072) ? 1'b1 : 1'b0);

assign local_C_address0 = p_cast_fu_1299_p1;

assign or_ln1069_1_fu_1256_p2 = (or_ln688_reg_1704 | or_ln1069_fu_1251_p2);

assign or_ln1069_fu_1251_p2 = (and_ln689_fu_1232_p2 | and_ln688_2_reg_1716);

assign or_ln687_fu_1325_p2 = (icmp_ln1069_1_reg_1688_pp0_iter2_reg | cmp_i_i135998_reg_2050);

assign or_ln688_1_fu_1329_p2 = (or_ln687_fu_1325_p2 | and_ln687_3_reg_1699_pp0_iter2_reg);

assign or_ln688_2_fu_423_p2 = (xor_ln688_fu_417_p2 | icmp_ln1069_1_fu_375_p2);

assign or_ln688_fu_411_p2 = (icmp_ln1069_1_fu_375_p2 | and_ln687_3_fu_405_p2);

assign or_ln689_1_fu_441_p2 = (or_ln689_fu_435_p2 | icmp_ln1069_1_fu_375_p2);

assign or_ln689_fu_435_p2 = (and_ln688_2_fu_429_p2 | and_ln687_3_fu_405_p2);

assign p_cast_fu_1299_p1 = empty_1246_fu_1293_p2;

assign select_ln1069_1_fu_1261_p3 = ((or_ln1069_1_fu_1256_p2[0:0] == 1'b1) ? 5'd0 : c7_V_fu_228);

assign select_ln1069_2_fu_1269_p3 = ((and_ln689_fu_1232_p2[0:0] == 1'b1) ? add_ln870_1_fu_1245_p2 : select_ln689_fu_1201_p3);

assign select_ln1069_3_fu_1090_p3 = ((or_ln689_1_fu_441_p2[0:0] == 1'b1) ? 10'd1 : add_ln1069_fu_1084_p2);

assign select_ln1069_4_fu_1104_p3 = ((or_ln688_fu_411_p2[0:0] == 1'b1) ? 15'd1 : add_ln1069_1_fu_1098_p2);

assign select_ln1069_5_fu_1118_p3 = ((icmp_ln1069_1_fu_375_p2[0:0] == 1'b1) ? 17'd1 : add_ln1069_2_fu_1112_p2);

assign select_ln1069_fu_1238_p3 = ((and_ln688_2_reg_1716[0:0] == 1'b1) ? add_ln870_fu_1195_p2 : select_ln688_fu_1178_p3);

assign select_ln688_fu_1178_p3 = ((or_ln688_reg_1704[0:0] == 1'b1) ? 6'd0 : c2_V_fu_240);

assign select_ln689_1_fu_1334_p3 = ((and_ln688_2_reg_1716_pp0_iter2_reg[0:0] == 1'b1) ? cmp_i_i1359_mid1_reg_2055 : or_ln688_1_fu_1329_p2);

assign select_ln689_2_fu_1220_p3 = ((and_ln688_2_reg_1716[0:0] == 1'b1) ? cmp_i_i_mid1_fu_1214_p2 : and_ln688_fu_1185_p2);

assign select_ln689_fu_1201_p3 = ((or_ln689_1_reg_1725[0:0] == 1'b1) ? 5'd0 : c6_V_fu_232);

assign tmp_2_cast_fu_1285_p3 = {{empty_1245_fu_1281_p1}, {4'd0}};

assign xor_ln687_fu_381_p2 = (icmp_ln1069_1_fu_375_p2 ^ 1'd1);

assign xor_ln688_fu_417_p2 = (icmp_ln1069_3_fu_399_p2 ^ 1'd1);

assign xor_ln689_fu_1227_p2 = (1'd1 ^ and_ln688_2_reg_1716);

assign zext_ln1069_fu_1277_p1 = select_ln1069_2_fu_1269_p3;

endmodule //kernel0_PE
