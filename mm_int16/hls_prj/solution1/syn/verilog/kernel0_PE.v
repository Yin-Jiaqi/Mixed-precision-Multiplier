// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kernel0_PE (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fifo_A_PE_0_076_dout,
        fifo_A_PE_0_076_empty_n,
        fifo_A_PE_0_076_read,
        fifo_B_PE_0_082_dout,
        fifo_B_PE_0_082_empty_n,
        fifo_B_PE_0_082_read,
        fifo_B_PE_1_083_din,
        fifo_B_PE_1_083_full_n,
        fifo_B_PE_1_083_write,
        fifo_A_PE_0_177_din,
        fifo_A_PE_0_177_full_n,
        fifo_A_PE_0_177_write,
        fifo_C_drain_PE_0_088_din,
        fifo_C_drain_PE_0_088_full_n,
        fifo_C_drain_PE_0_088_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] fifo_A_PE_0_076_dout;
input   fifo_A_PE_0_076_empty_n;
output   fifo_A_PE_0_076_read;
input  [31:0] fifo_B_PE_0_082_dout;
input   fifo_B_PE_0_082_empty_n;
output   fifo_B_PE_0_082_read;
output  [31:0] fifo_B_PE_1_083_din;
input   fifo_B_PE_1_083_full_n;
output   fifo_B_PE_1_083_write;
output  [31:0] fifo_A_PE_0_177_din;
input   fifo_A_PE_0_177_full_n;
output   fifo_A_PE_0_177_write;
output  [15:0] fifo_C_drain_PE_0_088_din;
input   fifo_C_drain_PE_0_088_full_n;
output   fifo_C_drain_PE_0_088_write;

reg ap_idle;
reg fifo_A_PE_0_076_read;
reg fifo_B_PE_0_082_read;
reg fifo_B_PE_1_083_write;
reg fifo_A_PE_0_177_write;
reg fifo_C_drain_PE_0_088_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln1069_reg_944;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
reg   [0:0] select_ln1069_3_reg_968;
reg   [0:0] select_ln1069_3_reg_968_pp0_iter4_reg;
reg    ap_block_state6_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1069_fu_253_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    fifo_A_PE_0_076_blk_n;
wire    ap_block_pp0_stage0;
reg    fifo_A_PE_0_177_blk_n;
reg    fifo_B_PE_0_082_blk_n;
reg    fifo_B_PE_1_083_blk_n;
reg    fifo_C_drain_PE_0_088_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] select_ln722_2_fu_511_p3;
reg   [0:0] select_ln722_2_reg_948;
reg   [0:0] select_ln722_2_reg_948_pp0_iter2_reg;
wire   [0:0] and_ln722_1_fu_537_p2;
reg   [0:0] and_ln722_1_reg_953;
reg   [0:0] and_ln722_1_reg_953_pp0_iter2_reg;
wire   [0:0] or_ln1069_1_fu_563_p2;
reg   [0:0] or_ln1069_1_reg_958;
wire   [0:0] p_mid110_fu_579_p2;
reg   [0:0] p_mid110_reg_963;
reg   [0:0] p_mid110_reg_963_pp0_iter2_reg;
wire   [0:0] select_ln1069_3_fu_597_p3;
reg   [0:0] select_ln1069_3_reg_968_pp0_iter2_reg;
reg   [0:0] select_ln1069_3_reg_968_pp0_iter3_reg;
wire   [0:0] and_ln1069_fu_617_p2;
reg   [0:0] and_ln1069_reg_972;
wire   [2:0] empty_152_fu_657_p1;
reg   [2:0] empty_152_reg_977;
reg  signed [15:0] v1_V_1_reg_987;
reg  signed [15:0] v1_V_reg_997;
reg   [5:0] local_C_addr_reg_1002;
reg   [5:0] local_C_addr_reg_1002_pp0_iter3_reg;
reg   [5:0] local_C_addr_reg_1002_pp0_iter4_reg;
wire   [15:0] grp_fu_861_p3;
reg    ap_condition_exit_pp0_iter1_stage0;
wire   [5:0] local_C_address0;
reg    local_C_ce0;
wire   [15:0] local_C_q0;
reg    local_C_ce1;
reg    local_C_we1;
wire   [63:0] p_cast_fu_838_p1;
reg   [3:0] c7_V_fu_114;
wire   [3:0] add_ln870_3_fu_701_p2;
wire    ap_loop_init;
reg   [3:0] c6_V_fu_118;
wire   [3:0] select_ln1069_6_fu_814_p3;
reg   [7:0] indvar_flatten_fu_122;
wire   [7:0] select_ln1069_7_fu_713_p3;
reg   [3:0] c5_V_fu_126;
wire   [3:0] select_ln1069_4_fu_623_p3;
reg   [10:0] indvar_flatten16_fu_130;
wire   [10:0] select_ln1069_8_fu_727_p3;
reg   [2:0] c2_V_fu_134;
wire   [2:0] select_ln1069_fu_543_p3;
reg   [12:0] indvar_flatten48_fu_138;
wire   [12:0] select_ln1069_9_fu_741_p3;
reg   [14:0] indvar_flatten90_fu_142;
wire   [14:0] select_ln1069_10_fu_755_p3;
reg   [15:0] indvar_flatten140_fu_146;
reg   [15:0] ap_sig_allocacmp_indvar_flatten140_load;
wire   [15:0] add_ln1069_4_fu_259_p2;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] grp_fu_869_p3;
wire   [2:0] trunc_ln1069_fu_282_p1;
wire   [2:0] empty_fu_286_p2;
wire   [0:0] cmp_i_i91_not_fu_276_p2;
wire   [0:0] cmp_i_i_not_fu_298_p2;
wire   [0:0] icmp_ln1069_1_fu_325_p2;
wire   [0:0] empty_150_fu_292_p2;
wire   [0:0] brmerge390_fu_304_p2;
wire   [0:0] icmp_ln1069_2_fu_355_p2;
wire   [0:0] xor_ln720_fu_349_p2;
wire   [0:0] icmp_ln1069_3_fu_367_p2;
wire   [0:0] icmp_ln1069_4_fu_379_p2;
wire   [0:0] icmp_ln1069_5_fu_391_p2;
wire   [0:0] and_ln720_3_fu_397_p2;
wire   [0:0] or_ln721_fu_403_p2;
wire   [0:0] or_ln720_fu_331_p2;
wire   [0:0] or_ln720_1_fu_337_p2;
wire   [0:0] or_ln720_2_fu_343_p2;
wire   [0:0] xor_ln721_fu_435_p2;
wire   [0:0] and_ln720_fu_361_p2;
wire   [0:0] or_ln721_4_fu_441_p2;
wire   [0:0] and_ln720_1_fu_373_p2;
wire   [0:0] and_ln720_2_fu_385_p2;
wire   [2:0] select_ln721_fu_409_p3;
wire   [0:0] and_ln721_2_fu_459_p2;
wire   [0:0] or_ln722_fu_471_p2;
wire   [0:0] or_ln722_1_fu_477_p2;
wire   [2:0] add_ln870_fu_465_p2;
wire   [0:0] cmp_i_i91_not_mid1_fu_491_p2;
wire   [0:0] or_ln721_1_fu_417_p2;
wire   [0:0] p_mid132_fu_505_p2;
wire   [0:0] or_ln721_2_fu_423_p2;
wire   [0:0] or_ln721_3_fu_429_p2;
wire   [0:0] and_ln721_fu_447_p2;
wire   [0:0] xor_ln722_fu_525_p2;
wire   [0:0] and_ln721_1_fu_453_p2;
wire   [3:0] select_ln722_fu_483_p3;
wire   [0:0] or_ln1069_fu_557_p2;
wire   [3:0] add_ln870_1_fu_551_p2;
wire   [2:0] trunc_ln1069_1_fu_569_p1;
wire   [2:0] p_mid1_fu_573_p2;
wire   [0:0] select_ln722_1_fu_497_p3;
wire   [0:0] cmp_i_i_not_mid1_fu_585_p2;
wire   [0:0] brmerge390_mid1_fu_591_p2;
wire   [0:0] or_ln722_2_fu_519_p2;
wire   [0:0] xor_ln1069_fu_605_p2;
wire   [0:0] and_ln722_fu_531_p2;
wire   [0:0] or_ln1069_2_fu_611_p2;
wire   [0:0] or_ln1069_3_fu_631_p2;
wire   [0:0] or_ln1069_4_fu_637_p2;
wire   [0:0] or_ln1069_5_fu_643_p2;
wire   [3:0] select_ln1069_5_fu_649_p3;
wire   [7:0] add_ln1069_fu_707_p2;
wire   [10:0] add_ln1069_1_fu_721_p2;
wire   [12:0] add_ln1069_2_fu_735_p2;
wire   [14:0] add_ln1069_3_fu_749_p2;
wire   [3:0] select_ln1069_1_fu_801_p3;
wire   [3:0] add_ln870_2_fu_808_p2;
wire   [5:0] tmp_1_cast_fu_825_p3;
wire   [5:0] zext_ln1069_fu_821_p1;
wire   [5:0] empty_153_fu_832_p2;
wire   [0:0] select_ln1069_2_fu_848_p3;
wire  signed [15:0] grp_fu_861_p0;
wire  signed [15:0] grp_fu_861_p1;
wire   [15:0] grp_fu_861_p2;
reg    grp_fu_861_ce;
reg    grp_fu_869_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_done_reg = 1'b0;
end

kernel0_PE_local_C #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
local_C_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_C_address0),
    .ce0(local_C_ce0),
    .q0(local_C_q0),
    .address1(local_C_addr_reg_1002_pp0_iter4_reg),
    .ce1(local_C_ce1),
    .we1(local_C_we1),
    .d1(grp_fu_869_p3)
);

kernel0_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_861_p0),
    .din1(grp_fu_861_p1),
    .din2(grp_fu_861_p2),
    .ce(grp_fu_861_ce),
    .dout(grp_fu_861_p3)
);

kernel0_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v1_V_reg_997),
    .din1(v1_V_1_reg_987),
    .din2(grp_fu_861_p3),
    .ce(grp_fu_869_ce),
    .dout(grp_fu_869_p3)
);

kernel0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            c2_V_fu_134 <= 3'd0;
        end else if (((icmp_ln1069_reg_944 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            c2_V_fu_134 <= select_ln1069_fu_543_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            c5_V_fu_126 <= 4'd0;
        end else if (((icmp_ln1069_reg_944 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            c5_V_fu_126 <= select_ln1069_4_fu_623_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            c6_V_fu_118 <= 4'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            c6_V_fu_118 <= select_ln1069_6_fu_814_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            c7_V_fu_114 <= 4'd0;
        end else if (((icmp_ln1069_reg_944 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            c7_V_fu_114 <= add_ln870_3_fu_701_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1069_fu_253_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten140_fu_146 <= add_ln1069_4_fu_259_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten140_fu_146 <= 16'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten16_fu_130 <= 11'd0;
        end else if (((icmp_ln1069_reg_944 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten16_fu_130 <= select_ln1069_8_fu_727_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten48_fu_138 <= 13'd0;
        end else if (((icmp_ln1069_reg_944 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten48_fu_138 <= select_ln1069_9_fu_741_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten90_fu_142 <= 15'd0;
        end else if (((icmp_ln1069_reg_944 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten90_fu_142 <= select_ln1069_10_fu_755_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_122 <= 8'd0;
        end else if (((icmp_ln1069_reg_944 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten_fu_122 <= select_ln1069_7_fu_713_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1069_reg_944 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln1069_reg_972 <= and_ln1069_fu_617_p2;
        and_ln722_1_reg_953 <= and_ln722_1_fu_537_p2;
        empty_152_reg_977 <= empty_152_fu_657_p1;
        or_ln1069_1_reg_958 <= or_ln1069_1_fu_563_p2;
        p_mid110_reg_963 <= p_mid110_fu_579_p2;
        select_ln1069_3_reg_968 <= select_ln1069_3_fu_597_p3;
        select_ln722_2_reg_948 <= select_ln722_2_fu_511_p3;
        v1_V_1_reg_987 <= {{fifo_A_PE_0_076_dout[31:16]}};
        v1_V_reg_997 <= {{fifo_B_PE_0_082_dout[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln722_1_reg_953_pp0_iter2_reg <= and_ln722_1_reg_953;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        local_C_addr_reg_1002 <= p_cast_fu_838_p1;
        local_C_addr_reg_1002_pp0_iter3_reg <= local_C_addr_reg_1002;
        local_C_addr_reg_1002_pp0_iter4_reg <= local_C_addr_reg_1002_pp0_iter3_reg;
        p_mid110_reg_963_pp0_iter2_reg <= p_mid110_reg_963;
        select_ln1069_3_reg_968_pp0_iter2_reg <= select_ln1069_3_reg_968;
        select_ln1069_3_reg_968_pp0_iter3_reg <= select_ln1069_3_reg_968_pp0_iter2_reg;
        select_ln1069_3_reg_968_pp0_iter4_reg <= select_ln1069_3_reg_968_pp0_iter3_reg;
        select_ln722_2_reg_948_pp0_iter2_reg <= select_ln722_2_reg_948;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln1069_reg_944 <= icmp_ln1069_fu_253_p2;
    end
end

always @ (*) begin
    if (((icmp_ln1069_fu_253_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln1069_reg_944 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten140_load = 16'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten140_load = indvar_flatten140_fu_146;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1069_reg_944 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_PE_0_076_blk_n = fifo_A_PE_0_076_empty_n;
    end else begin
        fifo_A_PE_0_076_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1069_reg_944 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_PE_0_076_read = 1'b1;
    end else begin
        fifo_A_PE_0_076_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1069_reg_944 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_PE_0_177_blk_n = fifo_A_PE_0_177_full_n;
    end else begin
        fifo_A_PE_0_177_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1069_reg_944 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_PE_0_177_write = 1'b1;
    end else begin
        fifo_A_PE_0_177_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1069_reg_944 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_PE_0_082_blk_n = fifo_B_PE_0_082_empty_n;
    end else begin
        fifo_B_PE_0_082_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1069_reg_944 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_PE_0_082_read = 1'b1;
    end else begin
        fifo_B_PE_0_082_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1069_reg_944 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_PE_1_083_blk_n = fifo_B_PE_1_083_full_n;
    end else begin
        fifo_B_PE_1_083_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1069_reg_944 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_PE_1_083_write = 1'b1;
    end else begin
        fifo_B_PE_1_083_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (select_ln1069_3_reg_968_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        fifo_C_drain_PE_0_088_blk_n = fifo_C_drain_PE_0_088_full_n;
    end else begin
        fifo_C_drain_PE_0_088_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (select_ln1069_3_reg_968_pp0_iter4_reg == 1'd0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        fifo_C_drain_PE_0_088_write = 1'b1;
    end else begin
        fifo_C_drain_PE_0_088_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_861_ce = 1'b1;
    end else begin
        grp_fu_861_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_869_ce = 1'b1;
    end else begin
        grp_fu_869_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        local_C_ce0 = 1'b1;
    end else begin
        local_C_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        local_C_ce1 = 1'b1;
    end else begin
        local_C_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        local_C_we1 = 1'b1;
    end else begin
        local_C_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1069_1_fu_721_p2 = (indvar_flatten16_fu_130 + 11'd1);

assign add_ln1069_2_fu_735_p2 = (indvar_flatten48_fu_138 + 13'd1);

assign add_ln1069_3_fu_749_p2 = (indvar_flatten90_fu_142 + 15'd1);

assign add_ln1069_4_fu_259_p2 = (ap_sig_allocacmp_indvar_flatten140_load + 16'd1);

assign add_ln1069_fu_707_p2 = (indvar_flatten_fu_122 + 8'd1);

assign add_ln870_1_fu_551_p2 = (select_ln722_fu_483_p3 + 4'd1);

assign add_ln870_2_fu_808_p2 = (select_ln1069_1_fu_801_p3 + 4'd1);

assign add_ln870_3_fu_701_p2 = (select_ln1069_5_fu_649_p3 + 4'd1);

assign add_ln870_fu_465_p2 = (select_ln721_fu_409_p3 + 3'd1);

assign and_ln1069_fu_617_p2 = (or_ln1069_2_fu_611_p2 & and_ln722_fu_531_p2);

assign and_ln720_1_fu_373_p2 = (xor_ln720_fu_349_p2 & icmp_ln1069_3_fu_367_p2);

assign and_ln720_2_fu_385_p2 = (xor_ln720_fu_349_p2 & icmp_ln1069_4_fu_379_p2);

assign and_ln720_3_fu_397_p2 = (xor_ln720_fu_349_p2 & icmp_ln1069_5_fu_391_p2);

assign and_ln720_fu_361_p2 = (xor_ln720_fu_349_p2 & icmp_ln1069_2_fu_355_p2);

assign and_ln721_1_fu_453_p2 = (or_ln721_4_fu_441_p2 & and_ln720_1_fu_373_p2);

assign and_ln721_2_fu_459_p2 = (or_ln721_4_fu_441_p2 & and_ln720_2_fu_385_p2);

assign and_ln721_fu_447_p2 = (or_ln721_4_fu_441_p2 & and_ln720_fu_361_p2);

assign and_ln722_1_fu_537_p2 = (xor_ln722_fu_525_p2 & and_ln721_1_fu_453_p2);

assign and_ln722_fu_531_p2 = (xor_ln722_fu_525_p2 & and_ln721_fu_447_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((select_ln1069_3_reg_968_pp0_iter4_reg == 1'd0) & (fifo_C_drain_PE_0_088_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((fifo_A_PE_0_177_full_n == 1'b0) & (icmp_ln1069_reg_944 == 1'd0)) | ((fifo_B_PE_1_083_full_n == 1'b0) & (icmp_ln1069_reg_944 == 1'd0)) | ((fifo_B_PE_0_082_empty_n == 1'b0) & (icmp_ln1069_reg_944 == 1'd0)) | ((icmp_ln1069_reg_944 == 1'd0) & (fifo_A_PE_0_076_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((select_ln1069_3_reg_968_pp0_iter4_reg == 1'd0) & (fifo_C_drain_PE_0_088_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((fifo_A_PE_0_177_full_n == 1'b0) & (icmp_ln1069_reg_944 == 1'd0)) | ((fifo_B_PE_1_083_full_n == 1'b0) & (icmp_ln1069_reg_944 == 1'd0)) | ((fifo_B_PE_0_082_empty_n == 1'b0) & (icmp_ln1069_reg_944 == 1'd0)) | ((icmp_ln1069_reg_944 == 1'd0) & (fifo_A_PE_0_076_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((select_ln1069_3_reg_968_pp0_iter4_reg == 1'd0) & (fifo_C_drain_PE_0_088_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((fifo_A_PE_0_177_full_n == 1'b0) & (icmp_ln1069_reg_944 == 1'd0)) | ((fifo_B_PE_1_083_full_n == 1'b0) & (icmp_ln1069_reg_944 == 1'd0)) | ((fifo_B_PE_0_082_empty_n == 1'b0) & (icmp_ln1069_reg_944 == 1'd0)) | ((icmp_ln1069_reg_944 == 1'd0) & (fifo_A_PE_0_076_empty_n == 1'b0)))));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((fifo_A_PE_0_177_full_n == 1'b0) & (icmp_ln1069_reg_944 == 1'd0)) | ((fifo_B_PE_1_083_full_n == 1'b0) & (icmp_ln1069_reg_944 == 1'd0)) | ((fifo_B_PE_0_082_empty_n == 1'b0) & (icmp_ln1069_reg_944 == 1'd0)) | ((icmp_ln1069_reg_944 == 1'd0) & (fifo_A_PE_0_076_empty_n == 1'b0)));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter5 = ((select_ln1069_3_reg_968_pp0_iter4_reg == 1'd0) & (fifo_C_drain_PE_0_088_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign brmerge390_fu_304_p2 = (cmp_i_i_not_fu_298_p2 | cmp_i_i91_not_fu_276_p2);

assign brmerge390_mid1_fu_591_p2 = (select_ln722_1_fu_497_p3 | cmp_i_i_not_mid1_fu_585_p2);

assign cmp_i_i91_not_fu_276_p2 = ((c2_V_fu_134 != 3'd3) ? 1'b1 : 1'b0);

assign cmp_i_i91_not_mid1_fu_491_p2 = ((add_ln870_fu_465_p2 != 3'd3) ? 1'b1 : 1'b0);

assign cmp_i_i_not_fu_298_p2 = ((c5_V_fu_126 != 4'd7) ? 1'b1 : 1'b0);

assign cmp_i_i_not_mid1_fu_585_p2 = ((add_ln870_1_fu_551_p2 != 4'd7) ? 1'b1 : 1'b0);

assign empty_150_fu_292_p2 = ((empty_fu_286_p2 == 3'd0) ? 1'b1 : 1'b0);

assign empty_152_fu_657_p1 = select_ln1069_5_fu_649_p3[2:0];

assign empty_153_fu_832_p2 = (tmp_1_cast_fu_825_p3 + zext_ln1069_fu_821_p1);

assign empty_fu_286_p2 = (trunc_ln1069_fu_282_p1 | c2_V_fu_134);

assign fifo_A_PE_0_177_din = fifo_A_PE_0_076_dout;

assign fifo_B_PE_1_083_din = fifo_B_PE_0_082_dout;

assign fifo_C_drain_PE_0_088_din = grp_fu_869_p3;

assign grp_fu_861_p0 = fifo_B_PE_0_082_dout[15:0];

assign grp_fu_861_p1 = fifo_A_PE_0_076_dout[15:0];

assign grp_fu_861_p2 = ((select_ln1069_2_fu_848_p3[0:0] == 1'b1) ? 16'd0 : local_C_q0);

assign icmp_ln1069_1_fu_325_p2 = ((indvar_flatten90_fu_142 == 15'd8192) ? 1'b1 : 1'b0);

assign icmp_ln1069_2_fu_355_p2 = ((c7_V_fu_114 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln1069_3_fu_367_p2 = ((indvar_flatten_fu_122 == 8'd64) ? 1'b1 : 1'b0);

assign icmp_ln1069_4_fu_379_p2 = ((indvar_flatten16_fu_130 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln1069_5_fu_391_p2 = ((indvar_flatten48_fu_138 == 13'd2048) ? 1'b1 : 1'b0);

assign icmp_ln1069_fu_253_p2 = ((ap_sig_allocacmp_indvar_flatten140_load == 16'd32768) ? 1'b1 : 1'b0);

assign local_C_address0 = p_cast_fu_838_p1;

assign or_ln1069_1_fu_563_p2 = (or_ln721_fu_403_p2 | or_ln1069_fu_557_p2);

assign or_ln1069_2_fu_611_p2 = (xor_ln1069_fu_605_p2 | and_ln721_2_fu_459_p2);

assign or_ln1069_3_fu_631_p2 = (and_ln722_1_fu_537_p2 | and_ln1069_fu_617_p2);

assign or_ln1069_4_fu_637_p2 = (or_ln722_fu_471_p2 | or_ln1069_3_fu_631_p2);

assign or_ln1069_5_fu_643_p2 = (or_ln1069_4_fu_637_p2 | icmp_ln1069_1_fu_325_p2);

assign or_ln1069_fu_557_p2 = (and_ln722_1_fu_537_p2 | and_ln721_2_fu_459_p2);

assign or_ln720_1_fu_337_p2 = (icmp_ln1069_1_fu_325_p2 | empty_150_fu_292_p2);

assign or_ln720_2_fu_343_p2 = (icmp_ln1069_1_fu_325_p2 | brmerge390_fu_304_p2);

assign or_ln720_fu_331_p2 = (icmp_ln1069_1_fu_325_p2 | cmp_i_i91_not_fu_276_p2);

assign or_ln721_1_fu_417_p2 = (or_ln720_fu_331_p2 | and_ln720_3_fu_397_p2);

assign or_ln721_2_fu_423_p2 = (or_ln720_1_fu_337_p2 | and_ln720_3_fu_397_p2);

assign or_ln721_3_fu_429_p2 = (or_ln720_2_fu_343_p2 | and_ln720_3_fu_397_p2);

assign or_ln721_4_fu_441_p2 = (xor_ln721_fu_435_p2 | icmp_ln1069_1_fu_325_p2);

assign or_ln721_fu_403_p2 = (icmp_ln1069_1_fu_325_p2 | and_ln720_3_fu_397_p2);

assign or_ln722_1_fu_477_p2 = (or_ln722_fu_471_p2 | icmp_ln1069_1_fu_325_p2);

assign or_ln722_2_fu_519_p2 = (or_ln721_3_fu_429_p2 | and_ln721_2_fu_459_p2);

assign or_ln722_fu_471_p2 = (and_ln721_2_fu_459_p2 | and_ln720_3_fu_397_p2);

assign p_cast_fu_838_p1 = empty_153_fu_832_p2;

assign p_mid110_fu_579_p2 = ((p_mid1_fu_573_p2 == 3'd0) ? 1'b1 : 1'b0);

assign p_mid132_fu_505_p2 = ((add_ln870_fu_465_p2 == 3'd0) ? 1'b1 : 1'b0);

assign p_mid1_fu_573_p2 = (trunc_ln1069_1_fu_569_p1 | select_ln1069_fu_543_p3);

assign select_ln1069_10_fu_755_p3 = ((icmp_ln1069_1_fu_325_p2[0:0] == 1'b1) ? 15'd1 : add_ln1069_3_fu_749_p2);

assign select_ln1069_1_fu_801_p3 = ((or_ln1069_1_reg_958[0:0] == 1'b1) ? 4'd0 : c6_V_fu_118);

assign select_ln1069_2_fu_848_p3 = ((and_ln722_1_reg_953_pp0_iter2_reg[0:0] == 1'b1) ? p_mid110_reg_963_pp0_iter2_reg : select_ln722_2_reg_948_pp0_iter2_reg);

assign select_ln1069_3_fu_597_p3 = ((and_ln722_1_fu_537_p2[0:0] == 1'b1) ? brmerge390_mid1_fu_591_p2 : or_ln722_2_fu_519_p2);

assign select_ln1069_4_fu_623_p3 = ((and_ln722_1_fu_537_p2[0:0] == 1'b1) ? add_ln870_1_fu_551_p2 : select_ln722_fu_483_p3);

assign select_ln1069_5_fu_649_p3 = ((or_ln1069_5_fu_643_p2[0:0] == 1'b1) ? 4'd0 : c7_V_fu_114);

assign select_ln1069_6_fu_814_p3 = ((and_ln1069_reg_972[0:0] == 1'b1) ? add_ln870_2_fu_808_p2 : select_ln1069_1_fu_801_p3);

assign select_ln1069_7_fu_713_p3 = ((or_ln1069_1_fu_563_p2[0:0] == 1'b1) ? 8'd1 : add_ln1069_fu_707_p2);

assign select_ln1069_8_fu_727_p3 = ((or_ln722_1_fu_477_p2[0:0] == 1'b1) ? 11'd1 : add_ln1069_1_fu_721_p2);

assign select_ln1069_9_fu_741_p3 = ((or_ln721_fu_403_p2[0:0] == 1'b1) ? 13'd1 : add_ln1069_2_fu_735_p2);

assign select_ln1069_fu_543_p3 = ((and_ln721_2_fu_459_p2[0:0] == 1'b1) ? add_ln870_fu_465_p2 : select_ln721_fu_409_p3);

assign select_ln721_fu_409_p3 = ((or_ln721_fu_403_p2[0:0] == 1'b1) ? 3'd0 : c2_V_fu_134);

assign select_ln722_1_fu_497_p3 = ((and_ln721_2_fu_459_p2[0:0] == 1'b1) ? cmp_i_i91_not_mid1_fu_491_p2 : or_ln721_1_fu_417_p2);

assign select_ln722_2_fu_511_p3 = ((and_ln721_2_fu_459_p2[0:0] == 1'b1) ? p_mid132_fu_505_p2 : or_ln721_2_fu_423_p2);

assign select_ln722_fu_483_p3 = ((or_ln722_1_fu_477_p2[0:0] == 1'b1) ? 4'd0 : c5_V_fu_126);

assign tmp_1_cast_fu_825_p3 = {{empty_152_reg_977}, {3'd0}};

assign trunc_ln1069_1_fu_569_p1 = add_ln870_1_fu_551_p2[2:0];

assign trunc_ln1069_fu_282_p1 = c5_V_fu_126[2:0];

assign xor_ln1069_fu_605_p2 = (1'd1 ^ and_ln721_1_fu_453_p2);

assign xor_ln720_fu_349_p2 = (icmp_ln1069_1_fu_325_p2 ^ 1'd1);

assign xor_ln721_fu_435_p2 = (icmp_ln1069_5_fu_391_p2 ^ 1'd1);

assign xor_ln722_fu_525_p2 = (1'd1 ^ and_ln721_2_fu_459_p2);

assign zext_ln1069_fu_821_p1 = select_ln1069_6_fu_814_p3;

endmodule //kernel0_PE
