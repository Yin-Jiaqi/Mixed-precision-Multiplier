-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel0_PE is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fifo_A_PE_0_076_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    fifo_A_PE_0_076_empty_n : IN STD_LOGIC;
    fifo_A_PE_0_076_read : OUT STD_LOGIC;
    fifo_B_PE_0_082_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    fifo_B_PE_0_082_empty_n : IN STD_LOGIC;
    fifo_B_PE_0_082_read : OUT STD_LOGIC;
    fifo_B_PE_1_083_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    fifo_B_PE_1_083_full_n : IN STD_LOGIC;
    fifo_B_PE_1_083_write : OUT STD_LOGIC;
    fifo_A_PE_0_177_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    fifo_A_PE_0_177_full_n : IN STD_LOGIC;
    fifo_A_PE_0_177_write : OUT STD_LOGIC;
    fifo_C_drain_PE_0_088_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    fifo_C_drain_PE_0_088_full_n : IN STD_LOGIC;
    fifo_C_drain_PE_0_088_write : OUT STD_LOGIC );
end;


architecture behav of kernel0_PE is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv15_2000 : STD_LOGIC_VECTOR (14 downto 0) := "010000000000000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv8_40 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_const_lv11_200 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_const_lv13_800 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln1069_reg_944 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal select_ln1069_3_reg_968 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1069_3_reg_968_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln1069_fu_253_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal fifo_A_PE_0_076_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal fifo_A_PE_0_177_blk_n : STD_LOGIC;
    signal fifo_B_PE_0_082_blk_n : STD_LOGIC;
    signal fifo_B_PE_1_083_blk_n : STD_LOGIC;
    signal fifo_C_drain_PE_0_088_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal select_ln722_2_fu_511_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln722_2_reg_948 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln722_2_reg_948_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln722_1_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln722_1_reg_953 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln722_1_reg_953_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1069_1_fu_563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1069_1_reg_958 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mid110_fu_579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mid110_reg_963 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mid110_reg_963_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1069_3_fu_597_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1069_3_reg_968_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1069_3_reg_968_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1069_fu_617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1069_reg_972 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_152_fu_657_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_152_reg_977 : STD_LOGIC_VECTOR (2 downto 0);
    signal v1_V_1_reg_987 : STD_LOGIC_VECTOR (15 downto 0);
    signal v1_V_reg_997 : STD_LOGIC_VECTOR (15 downto 0);
    signal local_C_addr_reg_1002 : STD_LOGIC_VECTOR (5 downto 0);
    signal local_C_addr_reg_1002_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal local_C_addr_reg_1002_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_861_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal local_C_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal local_C_ce0 : STD_LOGIC;
    signal local_C_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal local_C_ce1 : STD_LOGIC;
    signal local_C_we1 : STD_LOGIC;
    signal p_cast_fu_838_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal c7_V_fu_114 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln870_3_fu_701_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal c6_V_fu_118 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln1069_6_fu_814_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten_fu_122 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1069_7_fu_713_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal c5_V_fu_126 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln1069_4_fu_623_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten16_fu_130 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln1069_8_fu_727_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal c2_V_fu_134 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln1069_fu_543_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten48_fu_138 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln1069_9_fu_741_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar_flatten90_fu_142 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln1069_10_fu_755_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal indvar_flatten140_fu_146 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_indvar_flatten140_load : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1069_4_fu_259_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_869_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1069_fu_282_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_fu_286_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal cmp_i_i91_not_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i_not_fu_298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1069_1_fu_325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_150_fu_292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge390_fu_304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1069_2_fu_355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln720_fu_349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1069_3_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1069_4_fu_379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1069_5_fu_391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln720_3_fu_397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln721_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln720_fu_331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln720_1_fu_337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln720_2_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln721_fu_435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln720_fu_361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln721_4_fu_441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln720_1_fu_373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln720_2_fu_385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln721_fu_409_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln721_2_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln722_fu_471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln722_1_fu_477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln870_fu_465_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal cmp_i_i91_not_mid1_fu_491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln721_1_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mid132_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln721_2_fu_423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln721_3_fu_429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln721_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln722_fu_525_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln721_1_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln722_fu_483_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln1069_fu_557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln870_1_fu_551_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln1069_1_fu_569_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_mid1_fu_573_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln722_1_fu_497_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i_not_mid1_fu_585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge390_mid1_fu_591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln722_2_fu_519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1069_fu_605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln722_fu_531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1069_2_fu_611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1069_3_fu_631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1069_4_fu_637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1069_5_fu_643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1069_5_fu_649_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln1069_fu_707_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1069_1_fu_721_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1069_2_fu_735_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1069_3_fu_749_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln1069_1_fu_801_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln870_2_fu_808_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1_cast_fu_825_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1069_fu_821_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_153_fu_832_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln1069_2_fu_848_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_861_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_861_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_861_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_861_ce : STD_LOGIC;
    signal grp_fu_869_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component kernel0_mac_muladd_16s_16s_16ns_16_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component kernel0_PE_local_C IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component kernel0_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    local_C_U : component kernel0_PE_local_C
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_C_address0,
        ce0 => local_C_ce0,
        q0 => local_C_q0,
        address1 => local_C_addr_reg_1002_pp0_iter4_reg,
        ce1 => local_C_ce1,
        we1 => local_C_we1,
        d1 => grp_fu_869_p3);

    mac_muladd_16s_16s_16ns_16_4_1_U60 : component kernel0_mac_muladd_16s_16s_16ns_16_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_861_p0,
        din1 => grp_fu_861_p1,
        din2 => grp_fu_861_p2,
        ce => grp_fu_861_ce,
        dout => grp_fu_861_p3);

    mac_muladd_16s_16s_16ns_16_4_1_U61 : component kernel0_mac_muladd_16s_16s_16ns_16_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => v1_V_reg_997,
        din1 => v1_V_1_reg_987,
        din2 => grp_fu_861_p3,
        ce => grp_fu_869_ce,
        dout => grp_fu_869_p3);

    flow_control_loop_pipe_sequential_init_U : component kernel0_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    c2_V_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    c2_V_fu_134 <= ap_const_lv3_0;
                elsif (((icmp_ln1069_reg_944 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    c2_V_fu_134 <= select_ln1069_fu_543_p3;
                end if;
            end if; 
        end if;
    end process;

    c5_V_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    c5_V_fu_126 <= ap_const_lv4_0;
                elsif (((icmp_ln1069_reg_944 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    c5_V_fu_126 <= select_ln1069_4_fu_623_p3;
                end if;
            end if; 
        end if;
    end process;

    c6_V_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                    c6_V_fu_118 <= ap_const_lv4_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    c6_V_fu_118 <= select_ln1069_6_fu_814_p3;
                end if;
            end if; 
        end if;
    end process;

    c7_V_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    c7_V_fu_114 <= ap_const_lv4_0;
                elsif (((icmp_ln1069_reg_944 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    c7_V_fu_114 <= add_ln870_3_fu_701_p2;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten140_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln1069_fu_253_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten140_fu_146 <= add_ln1069_4_fu_259_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten140_fu_146 <= ap_const_lv16_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten16_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten16_fu_130 <= ap_const_lv11_0;
                elsif (((icmp_ln1069_reg_944 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten16_fu_130 <= select_ln1069_8_fu_727_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten48_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten48_fu_138 <= ap_const_lv13_0;
                elsif (((icmp_ln1069_reg_944 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten48_fu_138 <= select_ln1069_9_fu_741_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten90_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten90_fu_142 <= ap_const_lv15_0;
                elsif (((icmp_ln1069_reg_944 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten90_fu_142 <= select_ln1069_10_fu_755_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_122 <= ap_const_lv8_0;
                elsif (((icmp_ln1069_reg_944 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten_fu_122 <= select_ln1069_7_fu_713_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1069_reg_944 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln1069_reg_972 <= and_ln1069_fu_617_p2;
                and_ln722_1_reg_953 <= and_ln722_1_fu_537_p2;
                empty_152_reg_977 <= empty_152_fu_657_p1;
                or_ln1069_1_reg_958 <= or_ln1069_1_fu_563_p2;
                p_mid110_reg_963 <= p_mid110_fu_579_p2;
                select_ln1069_3_reg_968 <= select_ln1069_3_fu_597_p3;
                select_ln722_2_reg_948 <= select_ln722_2_fu_511_p3;
                v1_V_1_reg_987 <= fifo_A_PE_0_076_dout(31 downto 16);
                v1_V_reg_997 <= fifo_B_PE_0_082_dout(31 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                and_ln722_1_reg_953_pp0_iter2_reg <= and_ln722_1_reg_953;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                local_C_addr_reg_1002 <= p_cast_fu_838_p1(6 - 1 downto 0);
                local_C_addr_reg_1002_pp0_iter3_reg <= local_C_addr_reg_1002;
                local_C_addr_reg_1002_pp0_iter4_reg <= local_C_addr_reg_1002_pp0_iter3_reg;
                p_mid110_reg_963_pp0_iter2_reg <= p_mid110_reg_963;
                select_ln1069_3_reg_968_pp0_iter2_reg <= select_ln1069_3_reg_968;
                select_ln1069_3_reg_968_pp0_iter3_reg <= select_ln1069_3_reg_968_pp0_iter2_reg;
                select_ln1069_3_reg_968_pp0_iter4_reg <= select_ln1069_3_reg_968_pp0_iter3_reg;
                select_ln722_2_reg_948_pp0_iter2_reg <= select_ln722_2_reg_948;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                icmp_ln1069_reg_944 <= icmp_ln1069_fu_253_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1069_1_fu_721_p2 <= std_logic_vector(unsigned(indvar_flatten16_fu_130) + unsigned(ap_const_lv11_1));
    add_ln1069_2_fu_735_p2 <= std_logic_vector(unsigned(indvar_flatten48_fu_138) + unsigned(ap_const_lv13_1));
    add_ln1069_3_fu_749_p2 <= std_logic_vector(unsigned(indvar_flatten90_fu_142) + unsigned(ap_const_lv15_1));
    add_ln1069_4_fu_259_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten140_load) + unsigned(ap_const_lv16_1));
    add_ln1069_fu_707_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_122) + unsigned(ap_const_lv8_1));
    add_ln870_1_fu_551_p2 <= std_logic_vector(unsigned(select_ln722_fu_483_p3) + unsigned(ap_const_lv4_1));
    add_ln870_2_fu_808_p2 <= std_logic_vector(unsigned(select_ln1069_1_fu_801_p3) + unsigned(ap_const_lv4_1));
    add_ln870_3_fu_701_p2 <= std_logic_vector(unsigned(select_ln1069_5_fu_649_p3) + unsigned(ap_const_lv4_1));
    add_ln870_fu_465_p2 <= std_logic_vector(unsigned(select_ln721_fu_409_p3) + unsigned(ap_const_lv3_1));
    and_ln1069_fu_617_p2 <= (or_ln1069_2_fu_611_p2 and and_ln722_fu_531_p2);
    and_ln720_1_fu_373_p2 <= (xor_ln720_fu_349_p2 and icmp_ln1069_3_fu_367_p2);
    and_ln720_2_fu_385_p2 <= (xor_ln720_fu_349_p2 and icmp_ln1069_4_fu_379_p2);
    and_ln720_3_fu_397_p2 <= (xor_ln720_fu_349_p2 and icmp_ln1069_5_fu_391_p2);
    and_ln720_fu_361_p2 <= (xor_ln720_fu_349_p2 and icmp_ln1069_2_fu_355_p2);
    and_ln721_1_fu_453_p2 <= (or_ln721_4_fu_441_p2 and and_ln720_1_fu_373_p2);
    and_ln721_2_fu_459_p2 <= (or_ln721_4_fu_441_p2 and and_ln720_2_fu_385_p2);
    and_ln721_fu_447_p2 <= (or_ln721_4_fu_441_p2 and and_ln720_fu_361_p2);
    and_ln722_1_fu_537_p2 <= (xor_ln722_fu_525_p2 and and_ln721_1_fu_453_p2);
    and_ln722_fu_531_p2 <= (xor_ln722_fu_525_p2 and and_ln721_fu_447_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, fifo_A_PE_0_076_empty_n, icmp_ln1069_reg_944, fifo_B_PE_0_082_empty_n, fifo_B_PE_1_083_full_n, fifo_A_PE_0_177_full_n, fifo_C_drain_PE_0_088_full_n, select_ln1069_3_reg_968_pp0_iter4_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((select_ln1069_3_reg_968_pp0_iter4_reg = ap_const_lv1_0) and (fifo_C_drain_PE_0_088_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((fifo_A_PE_0_177_full_n = ap_const_logic_0) and (icmp_ln1069_reg_944 = ap_const_lv1_0)) or ((fifo_B_PE_1_083_full_n = ap_const_logic_0) and (icmp_ln1069_reg_944 = ap_const_lv1_0)) or ((fifo_B_PE_0_082_empty_n = ap_const_logic_0) and (icmp_ln1069_reg_944 = ap_const_lv1_0)) or ((icmp_ln1069_reg_944 = ap_const_lv1_0) and (fifo_A_PE_0_076_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, fifo_A_PE_0_076_empty_n, icmp_ln1069_reg_944, fifo_B_PE_0_082_empty_n, fifo_B_PE_1_083_full_n, fifo_A_PE_0_177_full_n, fifo_C_drain_PE_0_088_full_n, select_ln1069_3_reg_968_pp0_iter4_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((select_ln1069_3_reg_968_pp0_iter4_reg = ap_const_lv1_0) and (fifo_C_drain_PE_0_088_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((fifo_A_PE_0_177_full_n = ap_const_logic_0) and (icmp_ln1069_reg_944 = ap_const_lv1_0)) or ((fifo_B_PE_1_083_full_n = ap_const_logic_0) and (icmp_ln1069_reg_944 = ap_const_lv1_0)) or ((fifo_B_PE_0_082_empty_n = ap_const_logic_0) and (icmp_ln1069_reg_944 = ap_const_lv1_0)) or ((icmp_ln1069_reg_944 = ap_const_lv1_0) and (fifo_A_PE_0_076_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, fifo_A_PE_0_076_empty_n, icmp_ln1069_reg_944, fifo_B_PE_0_082_empty_n, fifo_B_PE_1_083_full_n, fifo_A_PE_0_177_full_n, fifo_C_drain_PE_0_088_full_n, select_ln1069_3_reg_968_pp0_iter4_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((select_ln1069_3_reg_968_pp0_iter4_reg = ap_const_lv1_0) and (fifo_C_drain_PE_0_088_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((fifo_A_PE_0_177_full_n = ap_const_logic_0) and (icmp_ln1069_reg_944 = ap_const_lv1_0)) or ((fifo_B_PE_1_083_full_n = ap_const_logic_0) and (icmp_ln1069_reg_944 = ap_const_lv1_0)) or ((fifo_B_PE_0_082_empty_n = ap_const_logic_0) and (icmp_ln1069_reg_944 = ap_const_lv1_0)) or ((icmp_ln1069_reg_944 = ap_const_lv1_0) and (fifo_A_PE_0_076_empty_n = ap_const_logic_0)))));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(fifo_A_PE_0_076_empty_n, icmp_ln1069_reg_944, fifo_B_PE_0_082_empty_n, fifo_B_PE_1_083_full_n, fifo_A_PE_0_177_full_n)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((fifo_A_PE_0_177_full_n = ap_const_logic_0) and (icmp_ln1069_reg_944 = ap_const_lv1_0)) or ((fifo_B_PE_1_083_full_n = ap_const_logic_0) and (icmp_ln1069_reg_944 = ap_const_lv1_0)) or ((fifo_B_PE_0_082_empty_n = ap_const_logic_0) and (icmp_ln1069_reg_944 = ap_const_lv1_0)) or ((icmp_ln1069_reg_944 = ap_const_lv1_0) and (fifo_A_PE_0_076_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter5_assign_proc : process(fifo_C_drain_PE_0_088_full_n, select_ln1069_3_reg_968_pp0_iter4_reg)
    begin
                ap_block_state6_pp0_stage0_iter5 <= ((select_ln1069_3_reg_968_pp0_iter4_reg = ap_const_lv1_0) and (fifo_C_drain_PE_0_088_full_n = ap_const_logic_0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln1069_fu_253_p2)
    begin
        if (((icmp_ln1069_fu_253_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1069_reg_944, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln1069_reg_944 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter4_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten140_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten140_fu_146)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_indvar_flatten140_load <= ap_const_lv16_0;
        else 
            ap_sig_allocacmp_indvar_flatten140_load <= indvar_flatten140_fu_146;
        end if; 
    end process;

    brmerge390_fu_304_p2 <= (cmp_i_i_not_fu_298_p2 or cmp_i_i91_not_fu_276_p2);
    brmerge390_mid1_fu_591_p2 <= (select_ln722_1_fu_497_p3 or cmp_i_i_not_mid1_fu_585_p2);
    cmp_i_i91_not_fu_276_p2 <= "0" when (c2_V_fu_134 = ap_const_lv3_3) else "1";
    cmp_i_i91_not_mid1_fu_491_p2 <= "0" when (add_ln870_fu_465_p2 = ap_const_lv3_3) else "1";
    cmp_i_i_not_fu_298_p2 <= "0" when (c5_V_fu_126 = ap_const_lv4_7) else "1";
    cmp_i_i_not_mid1_fu_585_p2 <= "0" when (add_ln870_1_fu_551_p2 = ap_const_lv4_7) else "1";
    empty_150_fu_292_p2 <= "1" when (empty_fu_286_p2 = ap_const_lv3_0) else "0";
    empty_152_fu_657_p1 <= select_ln1069_5_fu_649_p3(3 - 1 downto 0);
    empty_153_fu_832_p2 <= std_logic_vector(unsigned(tmp_1_cast_fu_825_p3) + unsigned(zext_ln1069_fu_821_p1));
    empty_fu_286_p2 <= (trunc_ln1069_fu_282_p1 or c2_V_fu_134);

    fifo_A_PE_0_076_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fifo_A_PE_0_076_empty_n, icmp_ln1069_reg_944, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1069_reg_944 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_A_PE_0_076_blk_n <= fifo_A_PE_0_076_empty_n;
        else 
            fifo_A_PE_0_076_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_A_PE_0_076_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1069_reg_944, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1069_reg_944 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_A_PE_0_076_read <= ap_const_logic_1;
        else 
            fifo_A_PE_0_076_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_A_PE_0_177_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1069_reg_944, fifo_A_PE_0_177_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1069_reg_944 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_A_PE_0_177_blk_n <= fifo_A_PE_0_177_full_n;
        else 
            fifo_A_PE_0_177_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_A_PE_0_177_din <= fifo_A_PE_0_076_dout;

    fifo_A_PE_0_177_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1069_reg_944, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1069_reg_944 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_A_PE_0_177_write <= ap_const_logic_1;
        else 
            fifo_A_PE_0_177_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_B_PE_0_082_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1069_reg_944, fifo_B_PE_0_082_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1069_reg_944 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_B_PE_0_082_blk_n <= fifo_B_PE_0_082_empty_n;
        else 
            fifo_B_PE_0_082_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_B_PE_0_082_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1069_reg_944, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1069_reg_944 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_B_PE_0_082_read <= ap_const_logic_1;
        else 
            fifo_B_PE_0_082_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_B_PE_1_083_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1069_reg_944, fifo_B_PE_1_083_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1069_reg_944 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_B_PE_1_083_blk_n <= fifo_B_PE_1_083_full_n;
        else 
            fifo_B_PE_1_083_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_B_PE_1_083_din <= fifo_B_PE_0_082_dout;

    fifo_B_PE_1_083_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1069_reg_944, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1069_reg_944 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_B_PE_1_083_write <= ap_const_logic_1;
        else 
            fifo_B_PE_1_083_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_C_drain_PE_0_088_blk_n_assign_proc : process(ap_enable_reg_pp0_iter5, fifo_C_drain_PE_0_088_full_n, select_ln1069_3_reg_968_pp0_iter4_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (select_ln1069_3_reg_968_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            fifo_C_drain_PE_0_088_blk_n <= fifo_C_drain_PE_0_088_full_n;
        else 
            fifo_C_drain_PE_0_088_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_C_drain_PE_0_088_din <= grp_fu_869_p3;

    fifo_C_drain_PE_0_088_write_assign_proc : process(ap_enable_reg_pp0_iter5, select_ln1069_3_reg_968_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln1069_3_reg_968_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            fifo_C_drain_PE_0_088_write <= ap_const_logic_1;
        else 
            fifo_C_drain_PE_0_088_write <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_861_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_861_ce <= ap_const_logic_1;
        else 
            grp_fu_861_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_861_p0 <= fifo_B_PE_0_082_dout(16 - 1 downto 0);
    grp_fu_861_p1 <= fifo_A_PE_0_076_dout(16 - 1 downto 0);
    grp_fu_861_p2 <= 
        ap_const_lv16_0 when (select_ln1069_2_fu_848_p3(0) = '1') else 
        local_C_q0;

    grp_fu_869_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_869_ce <= ap_const_logic_1;
        else 
            grp_fu_869_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1069_1_fu_325_p2 <= "1" when (indvar_flatten90_fu_142 = ap_const_lv15_2000) else "0";
    icmp_ln1069_2_fu_355_p2 <= "1" when (c7_V_fu_114 = ap_const_lv4_8) else "0";
    icmp_ln1069_3_fu_367_p2 <= "1" when (indvar_flatten_fu_122 = ap_const_lv8_40) else "0";
    icmp_ln1069_4_fu_379_p2 <= "1" when (indvar_flatten16_fu_130 = ap_const_lv11_200) else "0";
    icmp_ln1069_5_fu_391_p2 <= "1" when (indvar_flatten48_fu_138 = ap_const_lv13_800) else "0";
    icmp_ln1069_fu_253_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten140_load = ap_const_lv16_8000) else "0";
    local_C_address0 <= p_cast_fu_838_p1(6 - 1 downto 0);

    local_C_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            local_C_ce0 <= ap_const_logic_1;
        else 
            local_C_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_C_ce1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            local_C_ce1 <= ap_const_logic_1;
        else 
            local_C_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    local_C_we1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            local_C_we1 <= ap_const_logic_1;
        else 
            local_C_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln1069_1_fu_563_p2 <= (or_ln721_fu_403_p2 or or_ln1069_fu_557_p2);
    or_ln1069_2_fu_611_p2 <= (xor_ln1069_fu_605_p2 or and_ln721_2_fu_459_p2);
    or_ln1069_3_fu_631_p2 <= (and_ln722_1_fu_537_p2 or and_ln1069_fu_617_p2);
    or_ln1069_4_fu_637_p2 <= (or_ln722_fu_471_p2 or or_ln1069_3_fu_631_p2);
    or_ln1069_5_fu_643_p2 <= (or_ln1069_4_fu_637_p2 or icmp_ln1069_1_fu_325_p2);
    or_ln1069_fu_557_p2 <= (and_ln722_1_fu_537_p2 or and_ln721_2_fu_459_p2);
    or_ln720_1_fu_337_p2 <= (icmp_ln1069_1_fu_325_p2 or empty_150_fu_292_p2);
    or_ln720_2_fu_343_p2 <= (icmp_ln1069_1_fu_325_p2 or brmerge390_fu_304_p2);
    or_ln720_fu_331_p2 <= (icmp_ln1069_1_fu_325_p2 or cmp_i_i91_not_fu_276_p2);
    or_ln721_1_fu_417_p2 <= (or_ln720_fu_331_p2 or and_ln720_3_fu_397_p2);
    or_ln721_2_fu_423_p2 <= (or_ln720_1_fu_337_p2 or and_ln720_3_fu_397_p2);
    or_ln721_3_fu_429_p2 <= (or_ln720_2_fu_343_p2 or and_ln720_3_fu_397_p2);
    or_ln721_4_fu_441_p2 <= (xor_ln721_fu_435_p2 or icmp_ln1069_1_fu_325_p2);
    or_ln721_fu_403_p2 <= (icmp_ln1069_1_fu_325_p2 or and_ln720_3_fu_397_p2);
    or_ln722_1_fu_477_p2 <= (or_ln722_fu_471_p2 or icmp_ln1069_1_fu_325_p2);
    or_ln722_2_fu_519_p2 <= (or_ln721_3_fu_429_p2 or and_ln721_2_fu_459_p2);
    or_ln722_fu_471_p2 <= (and_ln721_2_fu_459_p2 or and_ln720_3_fu_397_p2);
    p_cast_fu_838_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_153_fu_832_p2),64));
    p_mid110_fu_579_p2 <= "1" when (p_mid1_fu_573_p2 = ap_const_lv3_0) else "0";
    p_mid132_fu_505_p2 <= "1" when (add_ln870_fu_465_p2 = ap_const_lv3_0) else "0";
    p_mid1_fu_573_p2 <= (trunc_ln1069_1_fu_569_p1 or select_ln1069_fu_543_p3);
    select_ln1069_10_fu_755_p3 <= 
        ap_const_lv15_1 when (icmp_ln1069_1_fu_325_p2(0) = '1') else 
        add_ln1069_3_fu_749_p2;
    select_ln1069_1_fu_801_p3 <= 
        ap_const_lv4_0 when (or_ln1069_1_reg_958(0) = '1') else 
        c6_V_fu_118;
    select_ln1069_2_fu_848_p3 <= 
        p_mid110_reg_963_pp0_iter2_reg when (and_ln722_1_reg_953_pp0_iter2_reg(0) = '1') else 
        select_ln722_2_reg_948_pp0_iter2_reg;
    select_ln1069_3_fu_597_p3 <= 
        brmerge390_mid1_fu_591_p2 when (and_ln722_1_fu_537_p2(0) = '1') else 
        or_ln722_2_fu_519_p2;
    select_ln1069_4_fu_623_p3 <= 
        add_ln870_1_fu_551_p2 when (and_ln722_1_fu_537_p2(0) = '1') else 
        select_ln722_fu_483_p3;
    select_ln1069_5_fu_649_p3 <= 
        ap_const_lv4_0 when (or_ln1069_5_fu_643_p2(0) = '1') else 
        c7_V_fu_114;
    select_ln1069_6_fu_814_p3 <= 
        add_ln870_2_fu_808_p2 when (and_ln1069_reg_972(0) = '1') else 
        select_ln1069_1_fu_801_p3;
    select_ln1069_7_fu_713_p3 <= 
        ap_const_lv8_1 when (or_ln1069_1_fu_563_p2(0) = '1') else 
        add_ln1069_fu_707_p2;
    select_ln1069_8_fu_727_p3 <= 
        ap_const_lv11_1 when (or_ln722_1_fu_477_p2(0) = '1') else 
        add_ln1069_1_fu_721_p2;
    select_ln1069_9_fu_741_p3 <= 
        ap_const_lv13_1 when (or_ln721_fu_403_p2(0) = '1') else 
        add_ln1069_2_fu_735_p2;
    select_ln1069_fu_543_p3 <= 
        add_ln870_fu_465_p2 when (and_ln721_2_fu_459_p2(0) = '1') else 
        select_ln721_fu_409_p3;
    select_ln721_fu_409_p3 <= 
        ap_const_lv3_0 when (or_ln721_fu_403_p2(0) = '1') else 
        c2_V_fu_134;
    select_ln722_1_fu_497_p3 <= 
        cmp_i_i91_not_mid1_fu_491_p2 when (and_ln721_2_fu_459_p2(0) = '1') else 
        or_ln721_1_fu_417_p2;
    select_ln722_2_fu_511_p3 <= 
        p_mid132_fu_505_p2 when (and_ln721_2_fu_459_p2(0) = '1') else 
        or_ln721_2_fu_423_p2;
    select_ln722_fu_483_p3 <= 
        ap_const_lv4_0 when (or_ln722_1_fu_477_p2(0) = '1') else 
        c5_V_fu_126;
    tmp_1_cast_fu_825_p3 <= (empty_152_reg_977 & ap_const_lv3_0);
    trunc_ln1069_1_fu_569_p1 <= add_ln870_1_fu_551_p2(3 - 1 downto 0);
    trunc_ln1069_fu_282_p1 <= c5_V_fu_126(3 - 1 downto 0);
    xor_ln1069_fu_605_p2 <= (ap_const_lv1_1 xor and_ln721_1_fu_453_p2);
    xor_ln720_fu_349_p2 <= (icmp_ln1069_1_fu_325_p2 xor ap_const_lv1_1);
    xor_ln721_fu_435_p2 <= (icmp_ln1069_5_fu_391_p2 xor ap_const_lv1_1);
    xor_ln722_fu_525_p2 <= (ap_const_lv1_1 xor and_ln721_2_fu_459_p2);
    zext_ln1069_fu_821_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1069_6_fu_814_p3),6));
end behav;
